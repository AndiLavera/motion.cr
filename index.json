{"repository_name":"motion","body":"<p align=\"center\">\n  <img src=\"./images/logo.svg\" width=\"800\">\n  <p align=\"center\">Reactive, Real-time Frontend Components</p>\n  <p align=\"center\"><a href=\"http://3.23.28.58/\">Try the Motion Demo</a></p>\n  <p align=\"center\">\n    <a href=\"https://www.codacy.com/manual/andrewc910/motion.cr?utm_source=github.com&utm_medium=referral&utm_content=andrewc910/motion.cr&utm_campaign=Badge_Grade\"><img src=\"https://app.codacy.com/project/badge/Grade/91df8833c8fd48b3a0397bf51e2c3787\"></a>\n    <a href=\"https://github.com/andrewc910/motion.cr/releases\"><img src=\"https://img.shields.io/github/release/andrewc910/motion.cr.svg?maxAge=360\"></a>\n    <a href=\"https://www.npmjs.com/package/@awcrotwell/motion\"><img alt=\"npm\" src=\"https://img.shields.io/npm/v/@awcrotwell/motion\"></a>\n    <a href=\"https://github.com/andrewc910/motion.cr/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/andrewc910/motion.cr.svg\"></a>\n    <a href=\"#\"><img src=\"https://github.com/andrewc910/motion.cr/workflows/Build/badge.svg\"></a>\n    <a href=\"#\"><img src=\"https://github.com/andrewc910/motion.cr/workflows/Docs/badge.svg\"></a>\n  </p>\n</p>\n\n<p align=\"center\"> \n  <img src=\"./images/motion-calculator.gif\" width=\"450\" />\n</p>\n\nMotion is a framework for building reactive, real-time frontend UI components in your Amber application using pure Crystal that are reusable, testable & encapsulated. For brevity, we will call them MotionComponents.\n\n- Motion is an Object-Oriented View Layer\n- Plays nicely with the Amber monolith you have.\n- Peacefully coexists with your existing frontend\n- Real-time frontend UI updates from frontend user interaction AND server-side updates.\n- No more frontend models, stores, or syncing; your source of truth is the database you already have.\n- **No JavaScript required!**\n\n## Table of Contents\n\n- [Motion.cr](#motioncr)\n  - [Table of Contents](#table-of-contents)\n  - [Installation](#installation)\n  - [Documentation](#documentation)\n  - [Component Guide](#component-guide)\n    - [Why should I use components?](#why-should-i-use-components-)\n      - [Testing](#testing)\n      - [Data Flow](#data-flow)\n      - [Standards](#standards)\n    - [Building components](#building-components)\n      - [Conventions](#conventions)\n      - [Quick start](#quick-start)\n      - [HTML Generation](#html-generation)\n      - [Props & Type Safety](#props---type-safety)\n      - [Blocks & Procs](#blocks---procs)\n  - [Motion Guide](#motion-guide)\n    - [Installation](#installation-1)\n    - [Building Motions](#building-motions)\n      - [Frontend interactions](#frontend-interactions)\n      - [Periodic Timers](#periodic-timers)\n      - [Motion::Event and Motion::Element](#motionevent-and-motionelement)\n  - [Limitations](#limitations)\n  - [Roadmap](#roadmap)\n  - [Contributing](#contributing)\n  - [License](#license)\n\n## Installation\n\nMotion.cr has Crystal and JavaScript parts, execute both of these commands:\n\n```sh\ndependencies:\n  motion:\n    github: andrewc910/motion.cr\n    version: 0.2.0\n```\n\nCreate a file `motion.cr` in `config/initializers` and add:\n\n```crystal\nrequire \"motion\"\n# Adds a `render` method to Amber controllers that accepts MotionComponents\nrequire \"motion/monkey_patch/amber\"\n```\n\n## Documentation\n\n- [API Documentation](https://andrewc910.github.io/motion.cr/)\n\n## Component Guide\n\nMotionComponents are Crystal objects that output HTML. MotionComponents are most effective in cases where view code is reused or benefits from being tested directly. The code itself was pulled & altered from [Lucky Framework](https://github.com/luckyframework/lucky).\n\n### Why should I use components?\n\n#### Testing\n\nUnlike traditional views, Motion Components can be unit-tested.\n\nViews are typically tested with slow integration tests that also exercise the routing and controller layers in addition to the view. This cost often discourages thorough test coverage.\n\nWith MotionComponents, integration tests can be reserved for end-to-end assertions, with permutations and corner cases covered at the unit level.\n\n#### Data Flow\n\nTraditional views have an implicit interface, making it hard to reason about what information is needed to render, leading to subtle bugs when rendering the same view in different contexts.\n\nMotionComponents use defined props that clearly defines what is needed to render, making them easier (and safer) to reuse than partials.\n\n#### Standards\n\nViews often fail basic code quality standards: long methods, deep conditional nesting, and mystery guests abound.\n\nMotionComponents are Crystal objects, making it easy to follow (and enforce) code quality standards.\n\n### Building components\n\n#### Conventions\n\nComponents are subclasses of `Motion::Base` and live in `views/components`. It's common practice to create and inherit from an `ApplicationComponent` that is a subclass of `Motion::Base`. By doing so, not only can you share logic, you can share view templates.\n\nComponent names end in `Component`.\n\nComponent module names are plural, as for controllers and jobs: `Users::AvatarComponent`\n\n#### Quick start\n\nIf you followed the installation guide above, you can start with you first component.\n\n1. Create a `components` folder in `views`\n2. Create your first component:\n\n```crystal\nclass MyFirstComponent < Motion::Base\n  def render\n    html_doctype\n    head do\n      css_link \"/css/main.css\"\n      utf8_charset\n      meta content: \"text/html;charset=utf-8\", http_equiv: \"Content-Type\"\n      title \"My First Component\"\n    end\n\n    body do\n      h1 { \"My First Component!\" }\n    end\n  end\nend\n```\n\n3. Render it in your controller:\n\n```crystal\nrender MyFirstComponent\n```\n\n#### HTML Generation\n\nFor static html rendering, please review the [lucky framework documentation](https://www.luckyframework.org/guides/frontend/rendering-html#layouts)\n\n> Note: Lucky uses the macro keyword `needs`, motion uses `props`\n\n#### Props & Type Safety\n\nProps allow you to pass arguements to child components that are type safe. One of the problems with ecr views & partials is, it's hard to reason what variables & data the page requires to render because everything is within scope. Props explicity display what is required for a particular component.\n\n```crystal\nclass MyFirstComponent < Motion::Base\n  props title : String\n\n  def render\n    html_doctype\n    head do\n      css_link \"/css/main.css\"\n      utf8_charset\n      meta content: \"text/html;charset=utf-8\", http_equiv: \"Content-Type\"\n      title \"My First Component\"\n    end\n\n    body do\n      h1 { @title }\n    end\n  end\nend\n```\n\nIn your controller:\n\n```crystal\nrender(MyFirstComponent, title: \"Hello World\")\n```\n\nor rendering from a component:\n\n```crystal\nm(MyFirstComponent, title: \"Hello World\") # m is shorthand for mount. mount is also acceptable\n```\n\n#### Blocks & Procs\n\nBlocks & Procs can be passed to child components. This will allow you to create more generic & reusable components.\n\n```crystal\nclass MyFirstComponent < Motion::Base\n  props title : Proc(void)\n\n  def render\n    html_doctype\n    head do\n      css_link \"/css/main.css\"\n      utf8_charset\n      meta content: \"text/html;charset=utf-8\", http_equiv: \"Content-Type\"\n      title \"My First Component\"\n    end\n\n    body do\n      title.call\n    end\n  end\nend\n```\n\nIn your parent component:\n\n```crystal\ntitle = Proc(void).new { h1 \"Hello World!\" }\nm(MyFirstComponent, title: title)\n```\n\n## Motion Guide\n\nMotion.cr allows you to mount special DOM elements that can be updated real-time from frontend interactions, backend state changes, or a combination of both. Some features include:\n\n- **Websockets Communication** - Communication with your Amber backend is performed via websockets\n- **No Full Page Reload** - The current page for a user is updated in place.\n- **Fast DOM Diffing** - DOM diffing is performed when replacing existing content with new content.\n- **Server Triggered Events** - Server-side events can trigger updates to arbitrarily many components via WebSocket channels.\n\nMotion.cr is similar to [Phoenix LiveView](https://github.com/phoenixframework/phoenix_live_view) (and even React!) in some key ways:\n\n- **Partial Page Replacement** - Motion does not use full page replacement, but rather replaces only the component on the page with new HTML, DOM diffed for performance.\n- **Encapsulated, consistent stateful components** - Components have continuous internal state that persists and updates. This means each time a component changes, new rendered HTML is generated and can replace what was there before.\n- **Blazing Fast** - Communication does not have to go through the full Amber router and controller stack. No changes to your routing or controller are required to get the full functionality of Motion. Motions take less than 1ms to process with typical times being around 300Î¼s.\n\n### Installation\n\n```sh\nnpm i @awcrotwell/motion\n```\n\nIn `main.js` add:\n\n```js\nimport { createClient } from '@awcrotwell/motion';\n\nconst client = createClient();\n```\n\n### Building Motions\n\n#### Frontend interactions\n\nFrontend interactions can update your MotionComponents using standard JavaScript events that you're already familiar with: `change`, `blur`, form submission, and more. Motions default to click events however you can override this to make it any event you would like. You can invoke motions manually using JavaScript if you need to.\n\nThe primary way to handle user interactions on the frontend is by setting `motion_component` to `true` annotating `@[Motion::MapMethod]` any motion methods:\n\n```crystal\n# Whenever a user click with the portion of the\n# page that contains this component,\n# `add` will be invoked, the component will be rerendered\n# and the dom will be updated with the new html\nclass MyMotionComponent < Motion::Base\n  # Let motion know this is a motion component\n  props motion_component = true\n  # Add your props that you plan to pass in or default\n  props total : Int32 = 0\n\n  # Annotate any motion methods\n  @[Motion::MapMethod]\n  def add\n    @total += 1\n  end\n\n  # render is what motion will invoke\n  # to generate your components html\n  def render\n    # data_motion: add tells the motion JS library what method\n    # to invoke when a user interacts with this component\n    div do\n      span do\n        @total\n        button data_motion: \"add\" do # data_motion: \"add\" defaults to a click event\n                                     # data_motion: \"mouseover->add\" to make it a mouseover event\n                                     # data_motion: \"mouseover->add mouseout->add\" to map multiple events to a single element\n          \"Increment\" # button text\n        end\n      end\n    end\n  end\nend\n\nclass MyFirstComponent < Motion::Base\n  def render\n    html_doctype\n    head do\n      css_link \"/css/main.css\"\n      utf8_charset\n      meta content: \"text/html;charset=utf-8\", http_equiv: \"Content-Type\"\n      title \"My First Component\"\n    end\n\n    body do\n      m(MyFirstMotionComponent)\n    end\n  end\nend\n```\n\nThis component can be rendered from your controller:\n\n```crystal\nrender MyFirstComponent\n```\n\nEvery time the \"Increment\" button is clicked, MyComponent will call the `add` method, re-render your component and send it back to the frontend to replace the existing DOM. All invocations of mapped motions will cause the component to re-render, and unchanged rendered HTML will not perform any changes.\n\n#### Periodic Timers\n\nMotion can automatically invoke a method on your component at regular intervals:\n\n```crystal\nclass TickerComponent < Motion::Base\n  props ticker : Int32 = 0\n  props motion_component : Bool = true\n\n  @[Motion::PeriodicTimer(interval: 1.second)]\n  def tick\n    @ticker += 1\n  end\n\n  def render\n    div do\n      span @ticker.to_s\n    end\n  end\nend\n```\n\nIn this example, after the component has mounted to a websockets channel, `tick` will be invoked every second and the component will be rerendered on the frontend.\n\n#### Backend Interactions\n\nBackend changes can be streamed to your Motion components in 2 steps.\n\n1. Broadcast changes after an event you care about:\n\n```crystal\n# Examples are with Granite ORM but Jennifer ORM works as well\nclass Todo < Granite::Base\n  after_create :broadcast_created\n\n  def broadcast_created\n    # Invoke `stream` on the socket motion connects through\n    MotionSocket.stream(\"todos:created\")\n  end\nend\n```\n\n2. Configure your Motion component to listen to a channel:\n\n```crystal\nclass TodosComponent < Motion::Base\n  props todos : Array(Todo) = Todo.order(created_at: :desc).limit(10)\n  # `stream_from` takes 2 arguements\n  # the first is the channel we want to listen for\n  # the second is a callback method\n  stream_from \"todos:created\", \"handle_created\"\n\n  # Callback which will be invoked before rendering\n  def handle_created(name)\n    Log.info { \"I am a callback\" }\n  end\nend\n```\n\nThis will cause any user that has a page open with `TodosComponent` mounted on it to re-render that component's portion of the page when a new `Todo` is created.\n\n#### Motion::Event and Motion::Element\n\nMethods that are mapped using `@[Motion::MapMethod]` can choose to accept an `event` parameter which is a `Motion::Event`. This object has a `target` attribute which is a `Motion::Element`, the element in the DOM that triggered the motion. Useful state and attributes can be extracted from these objects, including value, selected, checked, form state, data attributes, and more.\n\n```crystal\n  @[Motion::MapMethod]\n  def example(event)\n    event.type # => \"change\"\n    event.name # alias for type\n\n    # Motion::Element instance, the element that received the event.\n    event.target\n\n    # Motion::Element instance, the element with the event handler and the `data-motion` attribute\n    element = event.current_target\n    # Alias for #current_target\n    event.element\n\n\n    # Element API examples\n    element.tag_name # => \"input\"\n    element.value # => \"5\"\n    element.attributes # { class: \"col-xs-12\", ... }\n\n    # DOM element with aria-label=\"...\"\n    element[:aria_label]\n\n    # DOM element with data-extra-info=\"...\"\n    element.data[:extra_info]\n\n    # ActionController::Parameters instance with all form params. Also\n    # available on Motion::Event objects for convenience.\n    element.form_data\n  end\n```\n\nSee the code for full API for [Event](https://andrewc910.github.io/motion.cr/Motion/Event.html) and [Element](https://andrewc910.github.io/motion.cr/Motion/Element.html).\n\n## Limitations\n\n- Due to the way that your components are replaced on the page, Components that set `motion_component` to `true` are limited to a single top-level DOM element. If you have multiple DOM elements in your template at the top level, you must wrap them in a single element. This is a similar limitation that React enforced until `React.Fragment` appeared and is for a very similar reason. Because of this, your upper most component (the component you call from the controller) cannot be a set `motion_component`. The top most component will return the entire html document to the controller and there is no way to wrap an entire document in a single tag.\n\n- Motion generates the `initialize` method for you. You cannot define your own. To add an instance variable to the parameters & initialize it, add a prop like `prop name : String = \"Default Name\"`\n\n## Roadmap\n\n- Stream Updates from Models\n- Routing for a full SPA experience\n- AJAX?(TBD)\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at https://github.com/andrewc910/motion.cr/issues.\n\n## License\n\nThe shard is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n","program":{"html_id":"motion/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"motion","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"motion/Motion","path":"Motion.html","kind":"module","full_name":"Motion","name":"Motion","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion.cr","line_number":5,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion.cr#L5"},{"filename":"src/motion/channel.cr","line_number":10,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/channel.cr#L10"},{"filename":"src/motion/component_connection.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/component_connection.cr#L1"},{"filename":"src/motion/configuration.cr","line_number":3,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/configuration.cr#L3"},{"filename":"src/motion/connection_manager.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L1"},{"filename":"src/motion/element.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L1"},{"filename":"src/motion/event.cr","line_number":3,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L3"},{"filename":"src/motion/exceptions.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/exceptions.cr#L1"},{"filename":"src/motion/html_transformer.cr","line_number":3,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html_transformer.cr#L3"},{"filename":"src/motion/logger.cr","line_number":3,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/logger.cr#L3"},{"filename":"src/motion/motions.cr","line_number":9,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions.cr#L9"},{"filename":"src/motion/motions/broadcasts.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions/broadcasts.cr#L1"},{"filename":"src/motion/serializer.cr","line_number":4,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/serializer.cr#L4"},{"filename":"src/motion/version.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/version.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"configure(&)-class-method","html_id":"configure(&)-class-method","name":"configure","doc":"Main entry for configuring Motion. See `Motion::Configuration` for more details.\n\nIn `config/initializers/motion.cr`\n```crystal\nMotion.configure do |config|\n  config.render_component_comments = true\nend\n```","summary":"<p>Main entry for configuring Motion.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion.cr#L16","def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if @@config.finalized\n  raise(Exceptions::AlreadyConfiguredError.new)\nend\nyield @@config\n@@config.finalized = true\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"motion/Motion/Base","path":"Motion/Base.html","kind":"class","full_name":"Motion::Base","name":"Base","abstract":true,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Motion/Motions","kind":"module","full_name":"Motion::Motions","name":"Motions"},{"html_id":"motion/Motion/Motions/Broadcasts","kind":"module","full_name":"Motion::Motions::Broadcasts","name":"Broadcasts"},{"html_id":"motion/Motion/Motions/Rendering","kind":"module","full_name":"Motion::Motions::Rendering","name":"Rendering"},{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"},{"html_id":"motion/Motion/HTML/WithDefaults","kind":"module","full_name":"Motion::HTML::WithDefaults","name":"WithDefaults"},{"html_id":"motion/Motion/HTML/RenderIfDefined","kind":"module","full_name":"Motion::HTML::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"motion/Motion/HTML/HelpfulParagraphError","kind":"module","full_name":"Motion::HTML::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"motion/Motion/MountComponent","kind":"module","full_name":"Motion::MountComponent","name":"MountComponent"},{"html_id":"motion/Motion/HTML/ForgeryProtectionHelpers","kind":"module","full_name":"Motion::HTML::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"motion/Motion/HTML/TimeHelpers","kind":"module","full_name":"Motion::HTML::TimeHelpers","name":"TimeHelpers"},{"html_id":"motion/Motion/HTML/HTMLTextHelpers","kind":"module","full_name":"Motion::HTML::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"motion/Motion/HTML/TextHelpers","kind":"module","full_name":"Motion::HTML::TextHelpers","name":"TextHelpers"},{"html_id":"motion/Motion/HTML/NumberToCurrency","kind":"module","full_name":"Motion::HTML::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"motion/Motion/HTML/AssetHelpers","kind":"module","full_name":"Motion::HTML::AssetHelpers","name":"AssetHelpers"},{"html_id":"motion/Motion/HTML/Assignable","kind":"module","full_name":"Motion::HTML::Assignable","name":"Assignable"},{"html_id":"motion/Motion/HTML/SpecialtyTags","kind":"module","full_name":"Motion::HTML::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"motion/Motion/HTML/SelectHelpers","kind":"module","full_name":"Motion::HTML::SelectHelpers","name":"SelectHelpers"},{"html_id":"motion/Motion/HTML/InputHelpers","kind":"module","full_name":"Motion::HTML::InputHelpers","name":"InputHelpers"},{"html_id":"motion/Motion/HTML/LabelHelpers","kind":"module","full_name":"Motion::HTML::LabelHelpers","name":"LabelHelpers"},{"html_id":"motion/Motion/HTML/CustomTags","kind":"module","full_name":"Motion::HTML::CustomTags","name":"CustomTags"},{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"},{"html_id":"motion/Motion/HTML/BaseTags","kind":"module","full_name":"Motion::HTML::BaseTags","name":"BaseTags"},{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"},{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/base.cr","line_number":8,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/base.cr#L8"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"},{"html_id":"motion/Motion/Motions","kind":"module","full_name":"Motion::Motions","name":"Motions"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"_process_model_stream-instance-method","html_id":"_process_model_stream-instance-method","name":"_process_model_stream","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/base.cr#L69","def":{"name":"_process_model_stream","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"motion_component:Bool-instance-method","html_id":"motion_component:Bool-instance-method","name":"motion_component","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/base.cr#L14","def":{"name":"motion_component","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@motion_component"}},{"id":"motion_component=(motion_component:Bool)-instance-method","html_id":"motion_component=(motion_component:Bool)-instance-method","name":"motion_component=","doc":null,"summary":null,"abstract":false,"args":[{"name":"motion_component","doc":null,"default_value":"","external_name":"motion_component","restriction":"Bool"}],"args_string":"(motion_component : Bool)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/base.cr#L14","def":{"name":"motion_component=","args":[{"name":"motion_component","doc":null,"default_value":"","external_name":"motion_component","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@motion_component = motion_component"}},{"id":"view:IO::Memory-instance-method","html_id":"view:IO::Memory-instance-method","name":"view","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : IO::Memory","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/base.cr#L13","def":{"name":"view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IO::Memory","visibility":"Public","body":"@view"}},{"id":"view=(view:IO::Memory)-instance-method","html_id":"view=(view:IO::Memory)-instance-method","name":"view=","doc":null,"summary":null,"abstract":false,"args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"IO::Memory"}],"args_string":"(view : IO::Memory)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/base.cr#L13","def":{"name":"view=","args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"IO::Memory"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@view = view"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/Configuration","path":"Motion/Configuration.html","kind":"class","full_name":"Motion::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/configuration.cr","line_number":12,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/configuration.cr#L12"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":"Main configuration for Motion.cr.\n\nIn `config/initializers/motion.cr`\n```crystal\nMotion.configure do |config|\n  config.render_component_comments = true\nend\n```","summary":"<p>Main configuration for Motion.cr.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"render_component_comments:Bool-instance-method","html_id":"render_component_comments:Bool-instance-method","name":"render_component_comments","doc":"If true, 2 comments will be added at rendering signifying\nthe start & end of a component. Really helpful for debugging.\n\nDefaults to true","summary":"<p>If true, 2 comments will be added at rendering signifying the start & end of a component.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/configuration.cr#L17","def":{"name":"render_component_comments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@render_component_comments"}},{"id":"render_component_comments=(render_component_comments:Bool)-instance-method","html_id":"render_component_comments=(render_component_comments:Bool)-instance-method","name":"render_component_comments=","doc":"If true, 2 comments will be added at rendering signifying\nthe start & end of a component. Really helpful for debugging.\n\nDefaults to true","summary":"<p>If true, 2 comments will be added at rendering signifying the start & end of a component.</p>","abstract":false,"args":[{"name":"render_component_comments","doc":null,"default_value":"","external_name":"render_component_comments","restriction":"Bool"}],"args_string":"(render_component_comments : Bool)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/configuration.cr#L17","def":{"name":"render_component_comments=","args":[{"name":"render_component_comments","doc":null,"default_value":"","external_name":"render_component_comments","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@render_component_comments = render_component_comments"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/ConnectionManager","path":"Motion/ConnectionManager.html","kind":"class","full_name":"Motion::ConnectionManager","name":"ConnectionManager","abstract":false,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/connection_manager.cr","line_number":2,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L2"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(channel:Motion::Channel)-class-method","html_id":"new(channel:Motion::Channel)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Motion::Channel"}],"args_string":"(channel : Motion::Channel)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L9","def":{"name":"new","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":"Motion::Channel"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"broadcast_streams:Hash(String,Array(String))-instance-method","html_id":"broadcast_streams:Hash(String,Array(String))-instance-method","name":"broadcast_streams","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Array(String))","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L6","def":{"name":"broadcast_streams","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Array(String))","visibility":"Public","body":"@broadcast_streams"}},{"id":"channel:Motion::Channel-instance-method","html_id":"channel:Motion::Channel-instance-method","name":"channel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Motion::Channel","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L7","def":{"name":"channel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Motion::Channel","visibility":"Public","body":"@channel"}},{"id":"component_connections:Hash(String,Motion::ComponentConnection?)-instance-method","html_id":"component_connections:Hash(String,Motion::ComponentConnection?)-instance-method","name":"component_connections","doc":"TODO: Remove nilable","summary":"<p><span class=\"flag orange\">TODO</span>  Remove nilable</p>","abstract":false,"args":[],"args_string":" : Hash(String, Motion::ComponentConnection?)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L4","def":{"name":"component_connections","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Motion::ComponentConnection | ::Nil)","visibility":"Public","body":"@component_connections"}},{"id":"create(message:Motion::Message)-instance-method","html_id":"create(message:Motion::Message)-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Motion::Message"}],"args_string":"(message : Motion::Message)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L11","def":{"name":"create","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Motion::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attach_component(message.topic, message.state)"}},{"id":"destroy(message:Motion::Message)-instance-method","html_id":"destroy(message:Motion::Message)-instance-method","name":"destroy","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Motion::Message"}],"args_string":"(message : Motion::Message)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L15","def":{"name":"destroy","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Motion::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"topic = message.topic\n(get(topic)).close do |component|\n  destroy_periodic_timers(component)\n  if component.responds_to?(:broadcast_channel)\n    destroy_model_streams(component, topic)\n  end\n  component_connections.delete(topic)\nend\n"}},{"id":"fibers:Hash(String,Fiber)-instance-method","html_id":"fibers:Hash(String,Fiber)-instance-method","name":"fibers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Fiber)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L5","def":{"name":"fibers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Fiber)","visibility":"Public","body":"@fibers"}},{"id":"get(topic:String):Motion::ComponentConnection-instance-method","html_id":"get(topic:String):Motion::ComponentConnection-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"topic","doc":null,"default_value":"","external_name":"topic","restriction":"String"}],"args_string":"(topic : String) : Motion::ComponentConnection","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L44","def":{"name":"get","args":[{"name":"topic","doc":null,"default_value":"","external_name":"topic","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Motion::ComponentConnection","visibility":"Public","body":"begin\n  self.component_connections[topic]?.not_nil!\nrescue error : NilAssertionError\n  raise(Motion::Exceptions::NoComponentConnectionError.new(topic))\nend"}},{"id":"process_model_stream(stream_topic)-instance-method","html_id":"process_model_stream(stream_topic)-instance-method","name":"process_model_stream","doc":null,"summary":null,"abstract":false,"args":[{"name":"stream_topic","doc":null,"default_value":"","external_name":"stream_topic","restriction":""}],"args_string":"(stream_topic)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L33","def":{"name":"process_model_stream","args":[{"name":"stream_topic","doc":null,"default_value":"","external_name":"stream_topic","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"topics = broadcast_streams[stream_topic]?\nif topics && (!topics.empty?)\n  topics.each do |topic|\n    component_connection = get(topic)\n    component_connection.process_model_stream(stream_topic)\n    channel.synchronize(topic, true)\n  end\nend\n"}},{"id":"process_motion(message:Motion::Message)-instance-method","html_id":"process_motion(message:Motion::Message)-instance-method","name":"process_motion","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Motion::Message"}],"args_string":"(message : Motion::Message)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L25","def":{"name":"process_motion","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Motion::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(get(message.topic)).process_motion(message.name, message.event)"}},{"id":"synchronize(topic:String,proc)-instance-method","html_id":"synchronize(topic:String,proc)-instance-method","name":"synchronize","doc":null,"summary":null,"abstract":false,"args":[{"name":"topic","doc":null,"default_value":"","external_name":"topic","restriction":"String"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""}],"args_string":"(topic : String, proc)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/connection_manager.cr#L29","def":{"name":"synchronize","args":[{"name":"topic","doc":null,"default_value":"","external_name":"topic","restriction":"String"},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(get(topic)).if_render_required(proc)"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/Element","path":"Motion/Element.html","kind":"class","full_name":"Motion::Element","name":"Element","abstract":false,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/element.cr","line_number":2,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L2"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(raw:JSON::Any)-class-method","html_id":"new(raw:JSON::Any)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L6","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](key:String)-instance-method","html_id":"[](key:String)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L25","def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes[key]? || attributes[key.tr(\"_\", \"-\")]?"}},{"id":"attributes-instance-method","html_id":"attributes-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L21","def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw[\"attributes\"]? || ({} of String => String)"}},{"id":"data-instance-method","html_id":"data-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L44","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data || (@data = DataAttributes.new(self))"}},{"id":"form_data-instance-method","html_id":"form_data-instance-method","name":"form_data","doc":"TODO: Test","summary":"<p><span class=\"flag orange\">TODO</span>  Test</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L49","def":{"name":"form_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data || (@form_data = raw[\"formData\"]?)"}},{"id":"id-instance-method","html_id":"id-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L29","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[\"id\"]"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L13","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tag_name"}},{"id":"raw:JSON::Any-instance-method","html_id":"raw:JSON::Any-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSON::Any","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L3","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::Any","visibility":"Public","body":"@raw"}},{"id":"tag_name-instance-method","html_id":"tag_name-instance-method","name":"tag_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L9","def":{"name":"tag_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw[\"tagName\"]?"}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/element.cr#L17","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw[\"value\"]?"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/Event","path":"Motion/Event.html","kind":"class","full_name":"Motion::Event","name":"Event","abstract":false,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/event.cr","line_number":4,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L4"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(raw:JSON::Any)-class-method","html_id":"new(raw:JSON::Any)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L7","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"current_target-instance-method","html_id":"current_target-instance-method","name":"current_target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L30","def":{"name":"current_target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_target || (@current_target = Motion::Element.new(raw[\"currentTarget\"]))"}},{"id":"details-instance-method","html_id":"details-instance-method","name":"details","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L18","def":{"name":"details","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw[\"details\"]?"}},{"id":"element-instance-method","html_id":"element-instance-method","name":"element","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L34","def":{"name":"element","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_target()"}},{"id":"extra_data-instance-method","html_id":"extra_data-instance-method","name":"extra_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L22","def":{"name":"extra_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw[\"extraData\"]?"}},{"id":"form_data-instance-method","html_id":"form_data-instance-method","name":"form_data","doc":"TODO: Test","summary":"<p><span class=\"flag orange\">TODO</span>  Test</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L39","def":{"name":"form_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"element.form_data"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L14","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type"}},{"id":"raw:JSON::Any-instance-method","html_id":"raw:JSON::Any-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSON::Any","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L5","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::Any","visibility":"Public","body":"@raw"}},{"id":"target-instance-method","html_id":"target-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L26","def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@target || (@target = Motion::Element.new(raw[\"target\"]))"}},{"id":"type-instance-method","html_id":"type-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/event.cr#L10","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw[\"type\"]?"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML","path":"Motion/HTML.html","kind":"module","full_name":"Motion::HTML","name":"HTML","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/_check_tag_content.cr","line_number":2,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/_check_tag_content.cr#L2"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"motion/Motion/HTML/AllowedInTags","path":"Motion/HTML/AllowedInTags.html","kind":"module","full_name":"Motion::HTML::AllowedInTags","name":"AllowedInTags","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/allowed_in_tags.cr","line_number":27,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/allowed_in_tags.cr#L27"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":"Include this module in a type to allow it to be output in tags\n\nLucky already includes this in a few common types like `Int` and `Bool`.\nTypically this is enough but if you have a type you want to allow in tags, you\ncan do so.\n\nFor example:\n\n```crystal\nclass EmailAddress\n  include Lucky::AllowedInTags\n\n  def initialize(@value : String)\n  end\n\n  def to_s(io)\n    io.puts @value\n  end\nend\n```\n\nNow an `EmailAddress` can be used for tag content without calling `to_s`:\n\n```\nh1 EmailAddress.new(\"myemail.com\")\n```","summary":"<p>Include this module in a type to allow it to be output in tags</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/AssetHelpers","path":"Motion/HTML/AssetHelpers.html","kind":"module","full_name":"Motion::HTML::AssetHelpers","name":"AssetHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/asset_helpers.cr","line_number":7,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/asset_helpers.cr#L7"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ASSET_MANIFEST","name":"ASSET_MANIFEST","value":"{} of String => String","doc":null,"summary":null},{"id":"CONFIG","name":"CONFIG","value":"{has_loaded_manifest: false}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":"Methods for returning the path to assets\n\nThese methods will return fingerprinted paths, check assets at compile time,\nand allow for setting a CDN.\n\nFor an in-depth guide check: https://luckyframework.org/guides/frontend/asset-handling","summary":"<p>Methods for returning the path to assets</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dynamic_asset(path)-instance-method","html_id":"dynamic_asset(path)-instance-method","name":"dynamic_asset","doc":"Return the string path to an asset (allows string interpolation)\n\n```\n# In a page or component\n# Will find the asset in `public/assets/images/logo.png`\nimg src: asset(\"images/logo.png\")\n\n# Can also be used elsewhere by prepending Lucky::AssetHelpers\nLucky::AssetHelpers.asset(\"images/logo.png\")\n```\n\nNOTE: This method does *not* check assets at compile time. The asset path\nis found at runtime so it is possible the asset does not exist. Be sure to\nmanually test that the asset is returned as expected.","summary":"<p>Return the string path to an asset (allows string interpolation)</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/asset_helpers.cr#L86","def":{"name":"dynamic_asset","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fingerprinted_path = Lucky::AssetHelpers::ASSET_MANIFEST[path]?\nif fingerprinted_path\n  Lucky::Server.settings.asset_host + fingerprinted_path\nelse\n  raise(\"Missing asset: #{path}\")\nend\n"}}],"macros":[{"id":"asset(path)-macro","html_id":"asset(path)-macro","name":"asset","doc":"Return the string path to an asset\n\n```\n# In a page or component:\n# Will find the asset in `public/assets/images/logo.png`\nimg src: asset(\"images/logo.png\")\n\n# Can also be used elsewhere by prepending Lucky::AssetHelpers\nLucky::AssetHelpers.asset(\"images/logo.png\")\n```\n\nNote that assets are checked at compile time so if it is not found, Lucky\nwill let you know. It will also let you know if you had a typo and suggest an\nasset that is close to what you typed.\n\nNOTE: This macro requires a `StringLiteral`. That means you cannot\ninterpolate strings like this: `asset(\"images/icon-#{service_name}.png\")`.\ninstead use `dynamic_asset` if you need string interpolation.","summary":"<p>Return the string path to an asset</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/asset_helpers.cr#L34","def":{"name":"asset","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if CONFIG[:has_loaded_manifest] %}{% else %}\n      {% raise(\"No manifest loaded. Call 'Lucky::AssetHelpers.load_manifest'\") %}\n    {% end %}\n\n\n    \n{% if path.is_a?(StringLiteral) %}\n      {% if Lucky::AssetHelpers::ASSET_MANIFEST[path] %}\n        Lucky::Server.settings.asset_host + {{ Lucky::AssetHelpers::ASSET_MANIFEST[path] }}\n      {% else %}\n        {% asset_paths = Lucky::AssetHelpers::ASSET_MANIFEST.keys.join(\",\") %}\n        {{ run(\"../run_macros/missing_asset\", path, asset_paths) }}\n      {% end %}\n    {% else %}{% if path.is_a?(StringInterpolation) %}\n      {% raise(\"\\n\\nThe 'asset' macro doesn't work with string interpolation\\n\\nTry this...\\n\\n  â¸ Use the 'dynamic_asset' method instead\\n\") %}\n    {% else %}\n      {% raise(\"\\n\\nThe 'asset' macro requires a literal string like \\\"my-logo.png\\\", instead got: #{path}\\n\\nTry this...\\n\\n  â¸ If you're using a variable, switch to a literal string\\n  â¸ If you can't use a literal string, use the 'dynamic_asset' method instead\\n\") %}\n    {% end %}{% end %}\n\n  \n"}},{"id":"load_manifest-macro","html_id":"load_manifest-macro","name":"load_manifest","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/asset_helpers.cr#L11","def":{"name":"load_manifest","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{{ run(\"../run_macros/generate_asset_helpers\") }}\n\n    \n{% CONFIG[:has_loaded_manifest] = true %}\n\n  \n"}}],"types":[]},{"html_id":"motion/Motion/HTML/Assignable","path":"Motion/HTML/Assignable.html","kind":"module","full_name":"Motion::HTML::Assignable","name":"Assignable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/assignable.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/assignable.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"props(*type_declarations)-macro","html_id":"props(*type_declarations)-macro","name":"props","doc":"Declare what a page needs in order to be initialized.\n\nThis will declare an instance variable and getter automatically. It will\nalso add arguments to an `initialize` method at the end of compilation.\n\n### Examples\n\n```crystal\nclass Users::IndexPage < MainLayout\n  # This page needs a `User` or it will fail to compile\n  # You can access it with `@user` or the getter method `user`\n  needs user : User\n\n  # This page can take an optional `ProductQuery`. This means you can\n  # Leave `products` off when rendering from an Action.\n  needs products : ProductQuery?\n\n  # When using a `Bool` Lucky will generate a method ending with `?`\n  # So in this case you can call `should_show_sidebar?` in the page.\n  needs should_show_sidebar : Bool = true\nend\n```","summary":"<p>Declare what a page needs in order to be initialized.</p>","abstract":false,"args":[{"name":"type_declarations","doc":null,"default_value":"","external_name":"type_declarations","restriction":""}],"args_string":"(*type_declarations)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/assignable.cr#L24","def":{"name":"props","args":[{"name":"type_declarations","doc":null,"default_value":"","external_name":"type_declarations","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% for declaration in type_declarations %}\n      {% if declaration.is_a?(TypeDeclaration) %}{% else %}\n        {% raise(\"'needs' expects a type declaration like 'name : String', instead got: '#{declaration}'\") %}\n      {% end %}\n      {% if declaration.var.stringify.ends_with?(\"?\") %}\n        {% raise(\"Using '?' in a 'needs' var name is no longer supported. Now Lucky generates a method ending in '?' if the type is 'Bool'.\") %}\n      {% end %}\n\n      {% if declaration.type.stringify == \"Bool\" %}\n        def {{ declaration.var }}?\n          @{{ declaration.var }}\n        end\n      {% else %}\n        def {{ declaration.var }}\n          @{{ declaration.var }}\n        end\n      {% end %}\n\n      {% ASSIGNS << declaration %}\n    {% end %}\n\n  \n"}}],"types":[]},{"html_id":"motion/Motion/HTML/BaseTags","path":"Motion/HTML/BaseTags.html","kind":"module","full_name":"Motion::HTML::BaseTags","name":"BaseTags","abstract":false,"superclass":null,"ancestors":[{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/motion/html/tags/base_tags.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"EMPTY_HTML_ATTRS","name":"EMPTY_HTML_ATTRS","value":"{} of String => String","doc":null,"summary":null},{"id":"EMPTY_TAGS","name":"EMPTY_TAGS","value":"[:img, :br, :hr, :input, :meta, :source] of ::Symbol","doc":null,"summary":null},{"id":"RENAMED_TAGS","name":"RENAMED_TAGS","value":"{para: \"p\", select_tag: \"select\"}","doc":null,"summary":null},{"id":"TAGS","name":"TAGS","value":"[:a, :abbr, :address, :article, :aside, :b, :bdi, :body, :button, :code, :details, :dialog, :div, :dd, :dl, :dt, :em, :fieldset, :figcaption, :figure, :footer, :form, :h1, :h2, :h3, :h4, :h5, :h6, :head, :header, :html, :i, :iframe, :label, :li, :main, :mark, :menuitem, :meter, :nav, :ol, :option, :pre, :progress, :rp, :rt, :ruby, :s, :script, :section, :small, :span, :strong, :summary, :table, :tbody, :td, :template, :textarea, :th, :thead, :time, :title, :tr, :u, :ul, :video, :wbr] of ::Symbol","doc":null,"summary":null}],"included_modules":[{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"a(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"a(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"a","doc":"Generates a `&lt;a&gt;&lt;/a&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\na(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <a class=\"cls-1 red\" required>Sample</a>\n```","summary":"<p>Generates a <code>&lt;a&gt;&lt;/a&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"a","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\na(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"a(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"a(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"a","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"a","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"a(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"a(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"a(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"a","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"a","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<a\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</a>\"\n"}},{"id":"a(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"a(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"a","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"a","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<a\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</a>\"\n"}},{"id":"abbr(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"abbr(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"abbr","doc":"Generates a `&lt;abbr&gt;&lt;/abbr&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nabbr(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <abbr class=\"cls-1 red\" required>Sample</abbr>\n```","summary":"<p>Generates a <code>&lt;abbr&gt;&lt;/abbr&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"abbr","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nabbr(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"abbr(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"abbr(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"abbr","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"abbr","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"abbr(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"abbr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"abbr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"abbr","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"abbr","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<abbr\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</abbr>\"\n"}},{"id":"abbr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"abbr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"abbr","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"abbr","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<abbr\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</abbr>\"\n"}},{"id":"address(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"address(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"address","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"address","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<address\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</address>\"\n"}},{"id":"address(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"address(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"address","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"address","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<address\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</address>\"\n"}},{"id":"address(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"address(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"address","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"address","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"address(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"address(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"address(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"address","doc":"Generates a `&lt;address&gt;&lt;/address&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\naddress(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <address class=\"cls-1 red\" required>Sample</address>\n```","summary":"<p>Generates a <code>&lt;address&gt;&lt;/address&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"address","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\naddress(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"article(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"article(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"article","doc":"Generates a `&lt;article&gt;&lt;/article&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\narticle(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <article class=\"cls-1 red\" required>Sample</article>\n```","summary":"<p>Generates a <code>&lt;article&gt;&lt;/article&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"article","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\narticle(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"article(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"article(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"article","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"article","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"article(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"article(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"article(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"article","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"article","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<article\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</article>\"\n"}},{"id":"article(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"article(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"article","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"article","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<article\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</article>\"\n"}},{"id":"aside(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"aside(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"aside","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"aside","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<aside\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</aside>\"\n"}},{"id":"aside(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"aside(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"aside","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"aside","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<aside\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</aside>\"\n"}},{"id":"aside(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"aside(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"aside","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"aside","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"aside(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"aside(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"aside(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"aside","doc":"Generates a `&lt;aside&gt;&lt;/aside&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\naside(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <aside class=\"cls-1 red\" required>Sample</aside>\n```","summary":"<p>Generates a <code>&lt;aside&gt;&lt;/aside&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"aside","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\naside(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"b(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"b(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"b","doc":"Generates a `&lt;b&gt;&lt;/b&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nb(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <b class=\"cls-1 red\" required>Sample</b>\n```","summary":"<p>Generates a <code>&lt;b&gt;&lt;/b&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"b","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nb(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"b(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"b(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"b","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"b","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"b(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"b(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"b(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"b","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"b","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<b\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</b>\"\n"}},{"id":"b(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"b(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"b","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"b","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<b\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</b>\"\n"}},{"id":"bdi(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"bdi(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"bdi","doc":"Generates a `&lt;bdi&gt;&lt;/bdi&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbdi(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <bdi class=\"cls-1 red\" required>Sample</bdi>\n```","summary":"<p>Generates a <code>&lt;bdi&gt;&lt;/bdi&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"bdi","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nbdi(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"bdi(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"bdi(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"bdi","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"bdi","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bdi(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"bdi(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"bdi(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"bdi","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"bdi","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<bdi\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</bdi>\"\n"}},{"id":"bdi(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"bdi(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"bdi","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"bdi","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<bdi\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</bdi>\"\n"}},{"id":"body(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"body(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"body","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<body\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</body>\"\n"}},{"id":"body(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"body(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"body","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<body\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</body>\"\n"}},{"id":"body(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"body(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"body","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"body(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"body(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"body(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"body","doc":"Generates a `&lt;body&gt;&lt;/body&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbody(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <body class=\"cls-1 red\" required>Sample</body>\n```","summary":"<p>Generates a <code>&lt;body&gt;&lt;/body&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"body","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nbody(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"br(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"br(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"br","doc":"Generates a `&lt;br&gt;` tag.","summary":"<p>Generates a <code>&lt;br&gt;</code> tag.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"br","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"br([] of Symbol, options, **other_options)"}},{"id":"br(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"br(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"br","doc":"Generates a `&lt;br&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nbr([:required], {\"class\" => \"cls-1\"}) #=> <br class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&lt;br&gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"br","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<br#{tag_attrs}#{bool_attrs}>\"\n"}},{"id":"button(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"button(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"button","doc":"Generates a `&lt;button&gt;&lt;/button&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nbutton(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <button class=\"cls-1 red\" required>Sample</button>\n```","summary":"<p>Generates a <code>&lt;button&gt;&lt;/button&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"button","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nbutton(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"button(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"button(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"button","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"button","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"button(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"button(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"button(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"button","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"button","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<button\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</button>\"\n"}},{"id":"button(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"button(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"button","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"button","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<button\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</button>\"\n"}},{"id":"code(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"code(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"code","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<code\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</code>\"\n"}},{"id":"code(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"code(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"code","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<code\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</code>\"\n"}},{"id":"code(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"code(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"code","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"code","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"code(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"code(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"code(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"code","doc":"Generates a `&lt;code&gt;&lt;/code&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ncode(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <code class=\"cls-1 red\" required>Sample</code>\n```","summary":"<p>Generates a <code>&lt;code&gt;&lt;/code&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"code","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ncode(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"dd(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dd(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dd","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dd","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dd\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dd>\"\n"}},{"id":"dd(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dd(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dd","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dd","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dd\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dd>\"\n"}},{"id":"dd(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"dd(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dd","doc":"Generates a `&lt;dd&gt;&lt;/dd&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndd(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dd class=\"cls-1 red\" required>Sample</dd>\n```","summary":"<p>Generates a <code>&lt;dd&gt;&lt;/dd&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"dd","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ndd(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"dd(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"dd(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"dd","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"dd","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"dd(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"details(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"details(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"details","doc":"Generates a `&lt;details&gt;&lt;/details&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndetails(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <details class=\"cls-1 red\" required>Sample</details>\n```","summary":"<p>Generates a <code>&lt;details&gt;&lt;/details&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"details","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ndetails(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"details(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"details(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"details","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"details","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"details(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"details(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"details(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"details","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"details","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<details\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</details>\"\n"}},{"id":"details(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"details(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"details","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"details","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<details\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</details>\"\n"}},{"id":"dialog(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"dialog(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dialog","doc":"Generates a `&lt;dialog&gt;&lt;/dialog&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndialog(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dialog class=\"cls-1 red\" required>Sample</dialog>\n```","summary":"<p>Generates a <code>&lt;dialog&gt;&lt;/dialog&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"dialog","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ndialog(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"dialog(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"dialog(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"dialog","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"dialog","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"dialog(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"dialog(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dialog(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dialog","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dialog","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dialog\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dialog>\"\n"}},{"id":"dialog(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dialog(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dialog","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dialog","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dialog\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dialog>\"\n"}},{"id":"div(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"div(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"div","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<div\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</div>\"\n"}},{"id":"div(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"div(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"div","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<div\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</div>\"\n"}},{"id":"div(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"div(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"div","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"div(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"div(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"div(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"div","doc":"Generates a `&lt;div&gt;&lt;/div&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndiv(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <div class=\"cls-1 red\" required>Sample</div>\n```","summary":"<p>Generates a <code>&lt;div&gt;&lt;/div&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"div","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ndiv(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"dl(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dl(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dl","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dl","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dl\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dl>\"\n"}},{"id":"dl(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dl(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dl","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dl","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dl\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dl>\"\n"}},{"id":"dl(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"dl(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dl","doc":"Generates a `&lt;dl&gt;&lt;/dl&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndl(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dl class=\"cls-1 red\" required>Sample</dl>\n```","summary":"<p>Generates a <code>&lt;dl&gt;&lt;/dl&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"dl","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ndl(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"dl(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"dl(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"dl","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"dl","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"dl(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"dt(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"dt(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"dt","doc":"Generates a `&lt;dt&gt;&lt;/dt&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ndt(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <dt class=\"cls-1 red\" required>Sample</dt>\n```","summary":"<p>Generates a <code>&lt;dt&gt;&lt;/dt&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"dt","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ndt(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"dt(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"dt(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"dt","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"dt","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"dt(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"dt(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dt(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dt","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dt","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<dt\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dt>\"\n"}},{"id":"dt(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"dt(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"dt","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"dt","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<dt\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</dt>\"\n"}},{"id":"em(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"em(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"em","doc":"Generates a `&lt;em&gt;&lt;/em&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nem(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <em class=\"cls-1 red\" required>Sample</em>\n```","summary":"<p>Generates a <code>&lt;em&gt;&lt;/em&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"em","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nem(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"em(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"em(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"em","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"em","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"em(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"em(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"em(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"em","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"em","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<em\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</em>\"\n"}},{"id":"em(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"em(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"em","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"em","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<em\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</em>\"\n"}},{"id":"fieldset(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"fieldset(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"fieldset","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"fieldset","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<fieldset\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</fieldset>\"\n"}},{"id":"fieldset(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"fieldset(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"fieldset","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"fieldset","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<fieldset\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</fieldset>\"\n"}},{"id":"fieldset(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"fieldset(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"fieldset","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"fieldset","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"fieldset(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"fieldset(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"fieldset(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"fieldset","doc":"Generates a `&lt;fieldset&gt;&lt;/fieldset&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfieldset(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <fieldset class=\"cls-1 red\" required>Sample</fieldset>\n```","summary":"<p>Generates a <code>&lt;fieldset&gt;&lt;/fieldset&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"fieldset","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nfieldset(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"figcaption(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"figcaption(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figcaption","doc":"Generates a `&lt;figcaption&gt;&lt;/figcaption&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfigcaption(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <figcaption class=\"cls-1 red\" required>Sample</figcaption>\n```","summary":"<p>Generates a <code>&lt;figcaption&gt;&lt;/figcaption&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"figcaption","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nfigcaption(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"figcaption(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"figcaption(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"figcaption","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"figcaption","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"figcaption(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"figcaption(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"figcaption(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figcaption","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"figcaption","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<figcaption\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figcaption>\"\n"}},{"id":"figcaption(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"figcaption(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figcaption","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"figcaption","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<figcaption\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figcaption>\"\n"}},{"id":"figure(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"figure(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figure","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"figure","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<figure\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figure>\"\n"}},{"id":"figure(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"figure(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"figure","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"figure","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<figure\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</figure>\"\n"}},{"id":"figure(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"figure(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"figure","doc":"Generates a `&lt;figure&gt;&lt;/figure&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfigure(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <figure class=\"cls-1 red\" required>Sample</figure>\n```","summary":"<p>Generates a <code>&lt;figure&gt;&lt;/figure&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"figure","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nfigure(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"figure(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"figure(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"figure","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"figure","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"figure(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"footer(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"footer(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"footer","doc":"Generates a `&lt;footer&gt;&lt;/footer&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nfooter(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <footer class=\"cls-1 red\" required>Sample</footer>\n```","summary":"<p>Generates a <code>&lt;footer&gt;&lt;/footer&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"footer","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nfooter(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"footer(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"footer(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"footer","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"footer","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"footer(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"footer(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"footer(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"footer","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"footer","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<footer\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</footer>\"\n"}},{"id":"footer(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"footer(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"footer","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"footer","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<footer\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</footer>\"\n"}},{"id":"form(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"form(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"form","doc":"Generates a `&lt;form&gt;&lt;/form&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nform(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <form class=\"cls-1 red\" required>Sample</form>\n```","summary":"<p>Generates a <code>&lt;form&gt;&lt;/form&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"form","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nform(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"form(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"form(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"form","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"form","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"form(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"form(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"form(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"form","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"form","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<form\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</form>\"\n"}},{"id":"form(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"form(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"form","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"form","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<form\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</form>\"\n"}},{"id":"h1(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h1(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h1","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h1","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h1\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h1>\"\n"}},{"id":"h1(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h1(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h1","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h1","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h1\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h1>\"\n"}},{"id":"h1(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"h1(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"h1","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"h1","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"h1(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"h1(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"h1(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h1","doc":"Generates a `&lt;h1&gt;&lt;/h1&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh1(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h1 class=\"cls-1 red\" required>Sample</h1>\n```","summary":"<p>Generates a <code>&lt;h1&gt;&lt;/h1&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"h1","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nh1(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"h2(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"h2(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h2","doc":"Generates a `&lt;h2&gt;&lt;/h2&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh2(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h2 class=\"cls-1 red\" required>Sample</h2>\n```","summary":"<p>Generates a <code>&lt;h2&gt;&lt;/h2&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"h2","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nh2(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"h2(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"h2(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"h2","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"h2","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"h2(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"h2(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h2(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h2","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h2","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h2\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h2>\"\n"}},{"id":"h2(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h2(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h2","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h2","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h2\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h2>\"\n"}},{"id":"h3(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h3(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h3","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h3","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h3\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h3>\"\n"}},{"id":"h3(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h3(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h3","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h3","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h3\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h3>\"\n"}},{"id":"h3(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"h3(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"h3","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"h3","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"h3(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"h3(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"h3(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h3","doc":"Generates a `&lt;h3&gt;&lt;/h3&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh3(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h3 class=\"cls-1 red\" required>Sample</h3>\n```","summary":"<p>Generates a <code>&lt;h3&gt;&lt;/h3&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"h3","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nh3(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"h4(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"h4(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h4","doc":"Generates a `&lt;h4&gt;&lt;/h4&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh4(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h4 class=\"cls-1 red\" required>Sample</h4>\n```","summary":"<p>Generates a <code>&lt;h4&gt;&lt;/h4&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"h4","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nh4(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"h4(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"h4(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"h4","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"h4","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"h4(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"h4(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h4(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h4","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h4","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h4\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h4>\"\n"}},{"id":"h4(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h4(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h4","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h4","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h4\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h4>\"\n"}},{"id":"h5(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"h5(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h5","doc":"Generates a `&lt;h5&gt;&lt;/h5&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh5(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h5 class=\"cls-1 red\" required>Sample</h5>\n```","summary":"<p>Generates a <code>&lt;h5&gt;&lt;/h5&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"h5","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nh5(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"h5(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"h5(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"h5","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"h5","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"h5(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"h5(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h5(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h5","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h5","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h5\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h5>\"\n"}},{"id":"h5(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h5(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h5","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h5","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h5\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h5>\"\n"}},{"id":"h6(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"h6(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"h6","doc":"Generates a `&lt;h6&gt;&lt;/h6&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nh6(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <h6 class=\"cls-1 red\" required>Sample</h6>\n```","summary":"<p>Generates a <code>&lt;h6&gt;&lt;/h6&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"h6","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nh6(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"h6(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"h6(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"h6","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"h6","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"h6(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"h6(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h6(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h6","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h6","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<h6\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h6>\"\n"}},{"id":"h6(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"h6(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"h6","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"h6","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<h6\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</h6>\"\n"}},{"id":"head(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"head(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"head","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"head","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<head\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</head>\"\n"}},{"id":"head(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"head(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"head","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"head","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<head\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</head>\"\n"}},{"id":"head(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"head(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"head","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"head","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"head(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"head(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"head(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"head","doc":"Generates a `&lt;head&gt;&lt;/head&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nhead(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <head class=\"cls-1 red\" required>Sample</head>\n```","summary":"<p>Generates a <code>&lt;head&gt;&lt;/head&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"head","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nhead(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"header(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"header(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"header","doc":"Generates a `&lt;header&gt;&lt;/header&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nheader(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <header class=\"cls-1 red\" required>Sample</header>\n```","summary":"<p>Generates a <code>&lt;header&gt;&lt;/header&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"header","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nheader(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"header(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"header(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"header","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"header(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"header(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"header(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"header","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<header\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</header>\"\n"}},{"id":"header(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"header(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"header","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<header\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</header>\"\n"}},{"id":"hr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"hr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"hr","doc":"Generates a `&lt;hr&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nhr([:required], {\"class\" => \"cls-1\"}) #=> <hr class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&lt;hr&gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"hr","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<hr#{tag_attrs}#{bool_attrs}>\"\n"}},{"id":"hr(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"hr(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"hr","doc":"Generates a `&lt;hr&gt;` tag.","summary":"<p>Generates a <code>&lt;hr&gt;</code> tag.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"hr","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"hr([] of Symbol, options, **other_options)"}},{"id":"html(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"html(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"html","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"html","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<html\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</html>\"\n"}},{"id":"html(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"html(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"html","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"html","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<html\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</html>\"\n"}},{"id":"html(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"html(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"html","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"html","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"html(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"html(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"html(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"html","doc":"Generates a `&lt;html&gt;&lt;/html&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nhtml(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <html class=\"cls-1 red\" required>Sample</html>\n```","summary":"<p>Generates a <code>&lt;html&gt;&lt;/html&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"html","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nhtml(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"i(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"i(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"i","doc":"Generates a `&lt;i&gt;&lt;/i&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ni(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <i class=\"cls-1 red\" required>Sample</i>\n```","summary":"<p>Generates a <code>&lt;i&gt;&lt;/i&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"i","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ni(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"i(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"i(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"i","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"i","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"i(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"i(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"i(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"i","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"i","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<i\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</i>\"\n"}},{"id":"i(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"i(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"i","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"i","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<i\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</i>\"\n"}},{"id":"iframe(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"iframe(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"iframe","doc":"Generates a `&lt;iframe&gt;&lt;/iframe&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\niframe(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <iframe class=\"cls-1 red\" required>Sample</iframe>\n```","summary":"<p>Generates a <code>&lt;iframe&gt;&lt;/iframe&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"iframe","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\niframe(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"iframe(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"iframe(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"iframe","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"iframe","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"iframe(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"iframe(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"iframe(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"iframe","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"iframe","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<iframe\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</iframe>\"\n"}},{"id":"iframe(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"iframe(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"iframe","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"iframe","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<iframe\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</iframe>\"\n"}},{"id":"img(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"img(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"img","doc":"Generates a `&lt;img&gt;` tag.","summary":"<p>Generates a <code>&lt;img&gt;</code> tag.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"img","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"img([] of Symbol, options, **other_options)"}},{"id":"img(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"img(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"img","doc":"Generates a `&lt;img&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nimg([:required], {\"class\" => \"cls-1\"}) #=> <img class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&lt;img&gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"img","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<img#{tag_attrs}#{bool_attrs}>\"\n"}},{"id":"input(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"input(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"input","doc":"Generates a `&lt;input&gt;` tag.","summary":"<p>Generates a <code>&lt;input&gt;</code> tag.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"input","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"input([] of Symbol, options, **other_options)"}},{"id":"input(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"input(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"input","doc":"Generates a `&lt;input&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\ninput([:required], {\"class\" => \"cls-1\"}) #=> <input class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&lt;input&gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"input","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<input#{tag_attrs}#{bool_attrs}>\"\n"}},{"id":"label(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"label(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"label","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"label","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<label\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</label>\"\n"}},{"id":"label(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"label(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"label","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"label","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<label\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</label>\"\n"}},{"id":"label(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"label(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"label","doc":"Generates a `&lt;label&gt;&lt;/label&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nlabel(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <label class=\"cls-1 red\" required>Sample</label>\n```","summary":"<p>Generates a <code>&lt;label&gt;&lt;/label&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"label","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nlabel(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"label(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"label(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"label","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"label","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"label(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"li(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"li(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"li","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"li","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"li(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"li(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"li(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"li","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"li","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<li\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</li>\"\n"}},{"id":"li(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"li(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"li","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"li","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<li\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</li>\"\n"}},{"id":"li(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"li(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"li","doc":"Generates a `&lt;li&gt;&lt;/li&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nli(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <li class=\"cls-1 red\" required>Sample</li>\n```","summary":"<p>Generates a <code>&lt;li&gt;&lt;/li&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"li","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nli(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"main(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"main(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"main","doc":"Generates a `&lt;main&gt;&lt;/main&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmain(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <main class=\"cls-1 red\" required>Sample</main>\n```","summary":"<p>Generates a <code>&lt;main&gt;&lt;/main&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"main","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nmain(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"main(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"main(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"main","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"main","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"main(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"main(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"main(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"main","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"main","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<main\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</main>\"\n"}},{"id":"main(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"main(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"main","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"main","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<main\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</main>\"\n"}},{"id":"mark(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"mark(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"mark","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"mark","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<mark\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</mark>\"\n"}},{"id":"mark(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"mark(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"mark","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"mark","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<mark\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</mark>\"\n"}},{"id":"mark(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"mark(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"mark","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"mark","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"mark(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"mark(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"mark(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"mark","doc":"Generates a `&lt;mark&gt;&lt;/mark&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmark(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <mark class=\"cls-1 red\" required>Sample</mark>\n```","summary":"<p>Generates a <code>&lt;mark&gt;&lt;/mark&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"mark","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nmark(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"menuitem(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"menuitem(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"menuitem","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"menuitem","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"menuitem(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"menuitem(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"menuitem(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"menuitem","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"menuitem","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<menuitem\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</menuitem>\"\n"}},{"id":"menuitem(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"menuitem(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"menuitem","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"menuitem","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<menuitem\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</menuitem>\"\n"}},{"id":"menuitem(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"menuitem(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"menuitem","doc":"Generates a `&lt;menuitem&gt;&lt;/menuitem&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmenuitem(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <menuitem class=\"cls-1 red\" required>Sample</menuitem>\n```","summary":"<p>Generates a <code>&lt;menuitem&gt;&lt;/menuitem&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"menuitem","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nmenuitem(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"meta(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"meta(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"meta","doc":"Generates a `&lt;meta&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nmeta([:required], {\"class\" => \"cls-1\"}) #=> <meta class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&lt;meta&gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"meta","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<meta#{tag_attrs}#{bool_attrs}>\"\n"}},{"id":"meta(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"meta(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"meta","doc":"Generates a `&lt;meta&gt;` tag.","summary":"<p>Generates a <code>&lt;meta&gt;</code> tag.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"meta","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"meta([] of Symbol, options, **other_options)"}},{"id":"meter(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"meter(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"meter","doc":"Generates a `&lt;meter&gt;&lt;/meter&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nmeter(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <meter class=\"cls-1 red\" required>Sample</meter>\n```","summary":"<p>Generates a <code>&lt;meter&gt;&lt;/meter&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"meter","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nmeter(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"meter(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"meter(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"meter","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"meter","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<meter\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</meter>\"\n"}},{"id":"meter(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"meter(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"meter","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"meter","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<meter\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</meter>\"\n"}},{"id":"meter(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"meter(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"meter","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"meter","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"meter(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"nav(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"nav(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"nav","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"nav","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<nav\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</nav>\"\n"}},{"id":"nav(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"nav(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"nav","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"nav","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<nav\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</nav>\"\n"}},{"id":"nav(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"nav(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"nav","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"nav","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"nav(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"nav(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"nav(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"nav","doc":"Generates a `&lt;nav&gt;&lt;/nav&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nnav(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <nav class=\"cls-1 red\" required>Sample</nav>\n```","summary":"<p>Generates a <code>&lt;nav&gt;&lt;/nav&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"nav","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nnav(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"ol(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"ol(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ol","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"ol","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ol\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ol>\"\n"}},{"id":"ol(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"ol(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"ol","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"ol","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ol(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"ol(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"ol(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ol","doc":"Generates a `&lt;ol&gt;&lt;/ol&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nol(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ol class=\"cls-1 red\" required>Sample</ol>\n```","summary":"<p>Generates a <code>&lt;ol&gt;&lt;/ol&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"ol","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nol(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"ol(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"ol(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ol","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"ol","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ol\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ol>\"\n"}},{"id":"option(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"option(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"option","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"option","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<option\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</option>\"\n"}},{"id":"option(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"option(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"option","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"option","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<option\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</option>\"\n"}},{"id":"option(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"option(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"option","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"option","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"option(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"option(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"option(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"option","doc":"Generates a `&lt;option&gt;&lt;/option&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\noption(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <option class=\"cls-1 red\" required>Sample</option>\n```","summary":"<p>Generates a <code>&lt;option&gt;&lt;/option&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"option","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\noption(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"para(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"para(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"para","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"para","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<p\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</p>\"\n"}},{"id":"para(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"para(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"para","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"para","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<p\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</p>\"\n"}},{"id":"para(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"para(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"para","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"para","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"para(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"para(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"para(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"para","doc":"Generates a `&lt;para&gt;&lt;/para&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\npara(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <para class=\"cls-1 red\" required>Sample</para>\n```","summary":"<p>Generates a <code>&lt;para&gt;&lt;/para&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"para","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\npara(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"pre(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"pre(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"pre","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"pre","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"pre(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"pre(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"pre(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"pre","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"pre","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<pre\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</pre>\"\n"}},{"id":"pre(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"pre(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"pre","doc":"Generates a `&lt;pre&gt;&lt;/pre&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\npre(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <pre class=\"cls-1 red\" required>Sample</pre>\n```","summary":"<p>Generates a <code>&lt;pre&gt;&lt;/pre&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"pre","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\npre(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"pre(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"pre(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"pre","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"pre","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<pre\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</pre>\"\n"}},{"id":"progress(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"progress(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"progress","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"progress","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<progress\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</progress>\"\n"}},{"id":"progress(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"progress(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"progress","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"progress","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<progress\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</progress>\"\n"}},{"id":"progress(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"progress(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"progress","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"progress","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"progress(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"progress(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"progress(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"progress","doc":"Generates a `&lt;progress&gt;&lt;/progress&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nprogress(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <progress class=\"cls-1 red\" required>Sample</progress>\n```","summary":"<p>Generates a <code>&lt;progress&gt;&lt;/progress&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"progress","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nprogress(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"rp(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"rp(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rp","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"rp","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<rp\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rp>\"\n"}},{"id":"rp(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"rp(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rp","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"rp","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<rp\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rp>\"\n"}},{"id":"rp(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"rp(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"rp","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"rp","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"rp(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"rp(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"rp(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rp","doc":"Generates a `&lt;rp&gt;&lt;/rp&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nrp(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <rp class=\"cls-1 red\" required>Sample</rp>\n```","summary":"<p>Generates a <code>&lt;rp&gt;&lt;/rp&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"rp","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nrp(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"rt(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"rt(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"rt","doc":"Generates a `&lt;rt&gt;&lt;/rt&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nrt(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <rt class=\"cls-1 red\" required>Sample</rt>\n```","summary":"<p>Generates a <code>&lt;rt&gt;&lt;/rt&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"rt","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nrt(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"rt(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"rt(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rt","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"rt","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<rt\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rt>\"\n"}},{"id":"rt(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"rt(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"rt","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"rt","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"rt(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"rt(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"rt(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"rt","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"rt","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<rt\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</rt>\"\n"}},{"id":"ruby(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"ruby(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ruby","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"ruby","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ruby\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ruby>\"\n"}},{"id":"ruby(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"ruby(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ruby","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"ruby","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ruby\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ruby>\"\n"}},{"id":"ruby(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"ruby(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"ruby","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"ruby","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ruby(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"ruby(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"ruby(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ruby","doc":"Generates a `&lt;ruby&gt;&lt;/ruby&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nruby(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ruby class=\"cls-1 red\" required>Sample</ruby>\n```","summary":"<p>Generates a <code>&lt;ruby&gt;&lt;/ruby&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"ruby","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nruby(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"s(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"s(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"s","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"s","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<s\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</s>\"\n"}},{"id":"s(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"s(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"s","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"s","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<s\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</s>\"\n"}},{"id":"s(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"s(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"s","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"s","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"s(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"s(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"s(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"s","doc":"Generates a `&lt;s&gt;&lt;/s&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ns(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <s class=\"cls-1 red\" required>Sample</s>\n```","summary":"<p>Generates a <code>&lt;s&gt;&lt;/s&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"s","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ns(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"script(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"script(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"script","doc":"Generates a `&lt;script&gt;&lt;/script&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nscript(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <script class=\"cls-1 red\" required>Sample</script>\n```","summary":"<p>Generates a <code>&lt;script&gt;&lt;/script&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"script","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nscript(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"script(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"script(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"script","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"script","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"script(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"script(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"script(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"script","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"script","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<script\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</script>\"\n"}},{"id":"script(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"script(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"script","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"script","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<script\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</script>\"\n"}},{"id":"section(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"section(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"section","doc":"Generates a `&lt;section&gt;&lt;/section&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsection(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <section class=\"cls-1 red\" required>Sample</section>\n```","summary":"<p>Generates a <code>&lt;section&gt;&lt;/section&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"section","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nsection(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"section(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"section(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"section","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"section","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"section(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"section(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"section(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"section","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"section","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<section\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</section>\"\n"}},{"id":"section(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"section(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"section","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"section","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<section\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</section>\"\n"}},{"id":"select_tag(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"select_tag(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"select_tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"select_tag","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<select\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</select>\"\n"}},{"id":"select_tag(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"select_tag(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"select_tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"select_tag","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<select\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</select>\"\n"}},{"id":"select_tag(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"select_tag(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"select_tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"select_tag","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"select_tag(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"select_tag(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"select_tag(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"select_tag","doc":"Generates a `&lt;select_tag&gt;&lt;/select_tag&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nselect_tag(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <select_tag class=\"cls-1 red\" required>Sample</select_tag>\n```","summary":"<p>Generates a <code>&lt;select_tag&gt;&lt;/select_tag&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"select_tag","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nselect_tag(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"small(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"small(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"small","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"small","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<small\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</small>\"\n"}},{"id":"small(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"small(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"small","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"small","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<small\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</small>\"\n"}},{"id":"small(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"small(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"small","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"small","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"small(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"small(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"small(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"small","doc":"Generates a `&lt;small&gt;&lt;/small&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsmall(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <small class=\"cls-1 red\" required>Sample</small>\n```","summary":"<p>Generates a <code>&lt;small&gt;&lt;/small&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"small","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nsmall(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"source(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"source(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"source","doc":"Generates a `&lt;source&gt;` tag.\n\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n```\nsource([:required], {\"class\" => \"cls-1\"}) #=> <source class=\"cls-1\" required>\n```","summary":"<p>Generates a <code>&lt;source&gt;</code> tag.</p>","abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"source","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"bool_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nview << \"<source#{tag_attrs}#{bool_attrs}>\"\n"}},{"id":"source(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"source(options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"source","doc":"Generates a `&lt;source&gt;` tag.","summary":"<p>Generates a <code>&lt;source&gt;</code> tag.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L68","def":{"name":"source","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"source([] of Symbol, options, **other_options)"}},{"id":"span(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"span(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"span","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"span","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<span\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</span>\"\n"}},{"id":"span(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"span(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"span","doc":"Generates a `&lt;span&gt;&lt;/span&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nspan(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <span class=\"cls-1 red\" required>Sample</span>\n```","summary":"<p>Generates a <code>&lt;span&gt;&lt;/span&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"span","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nspan(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"span(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"span(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"span","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"span","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"span(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"span(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"span(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"span","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"span","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<span\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</span>\"\n"}},{"id":"strong(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"strong(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"strong","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"strong","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<strong\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</strong>\"\n"}},{"id":"strong(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"strong(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"strong","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"strong","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<strong\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</strong>\"\n"}},{"id":"strong(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"strong(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"strong","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"strong","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"strong(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"strong(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"strong(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"strong","doc":"Generates a `&lt;strong&gt;&lt;/strong&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nstrong(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <strong class=\"cls-1 red\" required>Sample</strong>\n```","summary":"<p>Generates a <code>&lt;strong&gt;&lt;/strong&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"strong","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nstrong(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"style(styles:String):Nil-instance-method","html_id":"style(styles:String):Nil-instance-method","name":"style","doc":"Generates a `&lt;style&gt;&lt;/style&gt;` block for adding inline CSS\n\n```\nstyle(\"a { color: red; }\") # => <style>a { color: red; }</style>\n```","summary":"<p>Generates a <code>&lt;style&gt;&lt;/style&gt;</code> block for adding inline CSS</p>","abstract":false,"args":[{"name":"styles","doc":null,"default_value":"","external_name":"styles","restriction":"String"}],"args_string":"(styles : String) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L109","def":{"name":"style","args":[{"name":"styles","doc":null,"default_value":"","external_name":"styles","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"view << \"<style>#{styles}</style>\""}},{"id":"summary(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"summary(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"summary","doc":"Generates a `&lt;summary&gt;&lt;/summary&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nsummary(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <summary class=\"cls-1 red\" required>Sample</summary>\n```","summary":"<p>Generates a <code>&lt;summary&gt;&lt;/summary&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"summary","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nsummary(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"summary(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"summary(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"summary","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"summary(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"summary(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"summary(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"summary","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<summary\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</summary>\"\n"}},{"id":"summary(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"summary(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"summary","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<summary\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</summary>\"\n"}},{"id":"table(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"table(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"table","doc":"Generates a `&lt;table&gt;&lt;/table&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntable(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <table class=\"cls-1 red\" required>Sample</table>\n```","summary":"<p>Generates a <code>&lt;table&gt;&lt;/table&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"table","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntable(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"table(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"table(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"table","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"table(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"table(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"table(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"table","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<table\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</table>\"\n"}},{"id":"table(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"table(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"table","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<table\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</table>\"\n"}},{"id":"tbody(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"tbody(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tbody","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"tbody","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<tbody\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tbody>\"\n"}},{"id":"tbody(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"tbody(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tbody","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"tbody","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<tbody\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tbody>\"\n"}},{"id":"tbody(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"tbody(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"tbody","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"tbody","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"tbody(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"tbody(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"tbody(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tbody","doc":"Generates a `&lt;tbody&gt;&lt;/tbody&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntbody(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <tbody class=\"cls-1 red\" required>Sample</tbody>\n```","summary":"<p>Generates a <code>&lt;tbody&gt;&lt;/tbody&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"tbody","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntbody(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"td(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"td(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"td","doc":"Generates a `&lt;td&gt;&lt;/td&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntd(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <td class=\"cls-1 red\" required>Sample</td>\n```","summary":"<p>Generates a <code>&lt;td&gt;&lt;/td&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"td","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntd(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"td(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"td(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"td","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"td","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"td(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"td(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"td(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"td","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"td","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<td\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</td>\"\n"}},{"id":"td(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"td(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"td","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"td","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<td\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</td>\"\n"}},{"id":"template(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"template(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"template","doc":"Generates a `&lt;template&gt;&lt;/template&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntemplate(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <template class=\"cls-1 red\" required>Sample</template>\n```","summary":"<p>Generates a <code>&lt;template&gt;&lt;/template&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"template","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntemplate(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"template(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"template(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"template","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"template","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"template(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"template(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"template(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"template","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"template","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<template\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</template>\"\n"}},{"id":"template(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"template(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"template","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"template","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<template\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</template>\"\n"}},{"id":"text(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"text(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"text","doc":"Outputs *content* and escapes it.\n\n```\ntext(\"Hello\") # => Hello\ntext(\"<div>\") # => &lt;div&gt;\n```","summary":"<p>Outputs <em>content</em> and escapes it.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L100","def":{"name":"text","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"view << (::HTML.escape(content.to_s))"}},{"id":"textarea(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"textarea(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"textarea","doc":"Generates a `&lt;textarea&gt;&lt;/textarea&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntextarea(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <textarea class=\"cls-1 red\" required>Sample</textarea>\n```","summary":"<p>Generates a <code>&lt;textarea&gt;&lt;/textarea&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"textarea","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntextarea(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"textarea(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"textarea(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"textarea","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"textarea","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"textarea(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"textarea(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"textarea(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"textarea","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"textarea","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<textarea\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</textarea>\"\n"}},{"id":"textarea(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"textarea(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"textarea","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"textarea","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<textarea\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</textarea>\"\n"}},{"id":"th(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"th(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"th","doc":"Generates a `&lt;th&gt;&lt;/th&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nth(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <th class=\"cls-1 red\" required>Sample</th>\n```","summary":"<p>Generates a <code>&lt;th&gt;&lt;/th&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"th","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nth(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"th(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"th(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"th","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"th","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"th(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"th(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"th(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"th","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"th","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<th\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</th>\"\n"}},{"id":"th(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"th(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"th","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"th","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<th\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</th>\"\n"}},{"id":"thead(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"thead(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"thead","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"thead","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"thead(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"thead(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"thead(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"thead","doc":"Generates a `&lt;thead&gt;&lt;/thead&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nthead(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <thead class=\"cls-1 red\" required>Sample</thead>\n```","summary":"<p>Generates a <code>&lt;thead&gt;&lt;/thead&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"thead","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nthead(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"thead(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"thead(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"thead","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"thead","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<thead\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</thead>\"\n"}},{"id":"thead(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"thead(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"thead","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"thead","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<thead\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</thead>\"\n"}},{"id":"time(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"time(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"time","doc":"Generates a `&lt;time&gt;&lt;/time&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntime(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <time class=\"cls-1 red\" required>Sample</time>\n```","summary":"<p>Generates a <code>&lt;time&gt;&lt;/time&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"time","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntime(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"time(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"time(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"time","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"time(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"time(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"time(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"time","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<time\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</time>\"\n"}},{"id":"time(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"time(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"time","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<time\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</time>\"\n"}},{"id":"title(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"title(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"title","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"title(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"title(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"title(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"title","doc":"Generates a `&lt;title&gt;&lt;/title&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntitle(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <title class=\"cls-1 red\" required>Sample</title>\n```","summary":"<p>Generates a <code>&lt;title&gt;&lt;/title&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"title","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntitle(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"title(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"title(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"title","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<title\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</title>\"\n"}},{"id":"title(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"title(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"title","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"title","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<title\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</title>\"\n"}},{"id":"tr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"tr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tr","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"tr","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<tr\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tr>\"\n"}},{"id":"tr(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"tr(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tr","doc":"Generates a `&lt;tr&gt;&lt;/tr&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\ntr(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <tr class=\"cls-1 red\" required>Sample</tr>\n```","summary":"<p>Generates a <code>&lt;tr&gt;&lt;/tr&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"tr","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntr(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"tr(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"tr(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"tr","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"tr","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"tr(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"tr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"tr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tr","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"tr","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<tr\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</tr>\"\n"}},{"id":"u(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"u(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"u","doc":"Generates a `&lt;u&gt;&lt;/u&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nu(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <u class=\"cls-1 red\" required>Sample</u>\n```","summary":"<p>Generates a <code>&lt;u&gt;&lt;/u&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"u","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nu(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"u(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"u(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"u","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"u","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"u(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"u(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"u(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"u","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"u","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<u\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</u>\"\n"}},{"id":"u(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"u(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"u","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"u","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<u\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</u>\"\n"}},{"id":"ul(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"ul(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"ul","doc":"Generates a `&lt;ul&gt;&lt;/ul&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nul(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <ul class=\"cls-1 red\" required>Sample</ul>\n```","summary":"<p>Generates a <code>&lt;ul&gt;&lt;/ul&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"ul","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nul(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"ul(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"ul(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"ul","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"ul","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ul(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"ul(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"ul(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ul","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"ul","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<ul\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ul>\"\n"}},{"id":"ul(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"ul(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"ul","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"ul","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<ul\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</ul>\"\n"}},{"id":"video(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"video(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"video","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"video","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"video(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"video(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"video(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"video","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"video","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<video\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</video>\"\n"}},{"id":"video(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"video(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"video","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"video","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<video\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</video>\"\n"}},{"id":"video(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"video(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"video","doc":"Generates a `&lt;video&gt;&lt;/video&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nvideo(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <video class=\"cls-1 red\" required>Sample</video>\n```","summary":"<p>Generates a <code>&lt;video&gt;&lt;/video&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"video","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nvideo(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"wbr(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"wbr(content:Motion::HTML::AllowedInTags|String=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"wbr","doc":"Generates a `&lt;wbr&gt;&lt;/wbr&gt;` tag.\n\n* The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n* The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n* The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n```\nwbr(\"Sample\", {\"class\" => \"cls-1 red\"}, [:required]) #=> <wbr class=\"cls-1 red\" required>Sample</wbr>\n```","summary":"<p>Generates a <code>&lt;wbr&gt;&lt;/wbr&gt;</code> tag.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(content : Motion::HTML::AllowedInTags | String = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":null,"def":{"name":"wbr","args":[{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\nwbr(attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"wbr(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"wbr(content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"wbr","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(content : String | Motion::HTML::AllowedInTags) : Nil","source_link":null,"def":{"name":"wbr","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"wbr(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"wbr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"wbr(attrs:Array(Symbol),options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"wbr","doc":null,"summary":null,"abstract":false,"args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(attrs : Array(Symbol), options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"wbr","args":[{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"boolean_attrs = build_boolean_attrs(attrs)\nmerged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n(((view << \"<wbr\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</wbr>\"\n"}},{"id":"wbr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"wbr(options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"wbr","doc":null,"summary":null,"abstract":false,"args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":null,"def":{"name":"wbr","args":[{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<wbr\") << tag_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</wbr>\"\n"}}],"macros":[{"id":"generate_tag_methods(method_name,tag)-macro","html_id":"generate_tag_methods(method_name,tag)-macro","name":"generate_tag_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":""}],"args_string":"(method_name, tag)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/base_tags.cr#L8","def":{"name":"generate_tag_methods","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""},{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n# Generates a `&lt;\n{{ method_name.id }}\n&gt;&lt;/\n{{ method_name.id }}\n&gt;` tag.\n\n    \n#\n\n    \n# * The *content* argument is either a `String`, or any type that has included `Motion::AllowedInTags`. This is the content that goes inside of the tag.\n\n    \n# * The *options* argument is a `Hash(String, String)` of any HTML attribute that has a key/value like `class`, `id`, `type`, etc...\n\n    \n# * The *attrs* argument is an `Array(Symbol)` for specifying [Boolean Attributes](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes) such as `required`, `disabled`, `autofocus`, etc...\n\n    \n#\n\n    \n# ```\n\n    \n# \n{{ method_name.id }}\n(\"Sample\", \n{\"class\" => \"cls-1 red\"}, [:required]) #=> <\n{{ method_name.id }}\n class=\"cls-1 red\" required>Sample</\n{{ method_name.id }}\n>\n\n    \n# ```\n\n    def \n{{ method_name.id }}\n(\n        content : Motion::HTML::AllowedInTags | String = \"\",\n        options = EMPTY_HTML_ATTRS,\n        attrs : Array(Symbol) = [] of Symbol,\n        **other_options\n      ) : Nil\n      merged_options = merge_options(other_options, options)\n      \n{{ method_name.id }}\n(attrs, merged_options) do\n        text content\n      \nend\n    \nend\n\n    def \n{{ method_name.id }}\n(content : String | Motion::HTML::AllowedInTags) : Nil\n      \n{{ method_name.id }}\n(EMPTY_HTML_ATTRS) do\n        text content\n      \nend\n    \nend\n\n    def \n{{ method_name.id }}\n(&block) : Nil\n      \n{{ method_name.id }}\n(EMPTY_HTML_ATTRS) do\n        yield\n      \nend\n    \nend\n\n    def \n{{ method_name.id }}\n(options = EMPTY_HTML_ATTRS, **other_options, &block) : Nil\n      merged_options = merge_options(other_options, options)\n      tag_attrs = build_tag_attrs(merged_options)\n      view << \"<\n{{ tag.id }}\n\" << tag_attrs << \">\"\n      check_tag_content!(yield)\n      view << \"</\n{{ tag.id }}\n>\"\n    \nend\n\n    def \n{{ method_name.id }}\n(attrs : Array(Symbol), options = EMPTY_HTML_ATTRS, **other_options, &block) : Nil\n      boolean_attrs = build_boolean_attrs(attrs)\n      merged_options = merge_options(other_options, options)\n      tag_attrs = build_tag_attrs(merged_options)\n      view << \"<\n{{ tag.id }}\n\" << tag_attrs << boolean_attrs << \">\"\n      check_tag_content!(yield)\n      view << \"</\n{{ tag.id }}\n>\"\n    \nend\n  \n"}}],"types":[]},{"html_id":"motion/Motion/HTML/CatchUnpermittedAttribute","path":"Motion/HTML/CatchUnpermittedAttribute.html","kind":"module","full_name":"Motion::HTML::CatchUnpermittedAttribute","name":"CatchUnpermittedAttribute","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/catch_unpermitted_attributes.cr","line_number":8,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/catch_unpermitted_attributes.cr#L8"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":"Catch unpermitted `Avram::SaveOperation` attribute and raises a helpful error.\n\nInclude this in your field components to get a nice compile-time error\nif you forgot to permit a column in your SaveOperation.\n\nThis module is included in the default `Shared::Field` component in new\nLucky apps.","summary":"<p>Catch unpermitted <code>Avram::SaveOperation</code> attribute and raises a helpful error.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/CustomTags","path":"Motion/HTML/CustomTags.html","kind":"module","full_name":"Motion::HTML::CustomTags","name":"CustomTags","abstract":false,"superclass":null,"ancestors":[{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/motion/html/tags/custom_tags.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/custom_tags.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"EMPTY_HTML_ATTRS","name":"EMPTY_HTML_ATTRS","value":"{} of String => String","doc":null,"summary":null}],"included_modules":[{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"empty_tag(name:String,options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","html_id":"empty_tag(name:String,options=EMPTY_HTML_ATTRS,**other_options):Nil-instance-method","name":"empty_tag","doc":"Outputs a custom tag with no tag closing.\n`empty_tag(\"br\")` => `<br>`","summary":"<p>Outputs a custom tag with no tag closing.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(name : String, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/custom_tags.cr#L42","def":{"name":"empty_tag","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\n((view << \"<#{name}\") << tag_attrs) << \">\"\n"}},{"id":"tag(name:String,content:Motion::HTML::AllowedInTags|String?=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","html_id":"tag(name:String,content:Motion::HTML::AllowedInTags|String?=&quot;&quot;,options=EMPTY_HTML_ATTRS,attrs:Array(Symbol)=[]ofSymbol,**other_options):Nil-instance-method","name":"tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String | ::Nil"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(name : String, content : Motion::HTML::AllowedInTags | String? = <span class=\"s\">&quot;&quot;</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, **other_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/custom_tags.cr#L5","def":{"name":"tag","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"content","doc":null,"default_value":"\"\"","external_name":"content","restriction":"Motion::HTML::AllowedInTags | String | ::Nil"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag(name, attrs, merged_options) do\n  text(content)\nend\n"}},{"id":"tag(name:String,content:String|Motion::HTML::AllowedInTags):Nil-instance-method","html_id":"tag(name:String,content:String|Motion::HTML::AllowedInTags):Nil-instance-method","name":"tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"args_string":"(name : String, content : String | Motion::HTML::AllowedInTags) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/custom_tags.cr#L19","def":{"name":"tag","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | Motion::HTML::AllowedInTags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"tag(EMPTY_HTML_ATTRS) do\n  text(content)\nend"}},{"id":"tag(name:String,attrs:Array(Symbol)=[]ofSymbol,options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","html_id":"tag(name:String,attrs:Array(Symbol)=[]ofSymbol,options=EMPTY_HTML_ATTRS,**other_options,&):Nil-instance-method","name":"tag","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"args_string":"(name : String, attrs : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, options = <span class=\"t\">EMPTY_HTML_ATTRS</span>, **other_options, &) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/custom_tags.cr#L31","def":{"name":"tag","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"attrs","doc":null,"default_value":"[] of Symbol","external_name":"attrs","restriction":"Array(Symbol)"},{"name":"options","doc":null,"default_value":"EMPTY_HTML_ATTRS","external_name":"options","restriction":""}],"double_splat":{"name":"other_options","doc":null,"default_value":"","external_name":"other_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"merged_options = merge_options(other_options, options)\ntag_attrs = build_tag_attrs(merged_options)\nboolean_attrs = build_boolean_attrs(attrs)\n(((view << \"<#{name}\") << tag_attrs) << boolean_attrs) << \">\"\ncheck_tag_content!(yield)\nview << \"</#{name}>\"\n"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/Engine","path":"Motion/HTML/Engine.html","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine","abstract":false,"superclass":null,"ancestors":[{"html_id":"motion/Motion/HTML/WithDefaults","kind":"module","full_name":"Motion::HTML::WithDefaults","name":"WithDefaults"},{"html_id":"motion/Motion/HTML/RenderIfDefined","kind":"module","full_name":"Motion::HTML::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"motion/Motion/HTML/HelpfulParagraphError","kind":"module","full_name":"Motion::HTML::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"motion/Motion/MountComponent","kind":"module","full_name":"Motion::MountComponent","name":"MountComponent"},{"html_id":"motion/Motion/HTML/ForgeryProtectionHelpers","kind":"module","full_name":"Motion::HTML::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"motion/Motion/HTML/TimeHelpers","kind":"module","full_name":"Motion::HTML::TimeHelpers","name":"TimeHelpers"},{"html_id":"motion/Motion/HTML/HTMLTextHelpers","kind":"module","full_name":"Motion::HTML::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"motion/Motion/HTML/TextHelpers","kind":"module","full_name":"Motion::HTML::TextHelpers","name":"TextHelpers"},{"html_id":"motion/Motion/HTML/NumberToCurrency","kind":"module","full_name":"Motion::HTML::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"motion/Motion/HTML/AssetHelpers","kind":"module","full_name":"Motion::HTML::AssetHelpers","name":"AssetHelpers"},{"html_id":"motion/Motion/HTML/Assignable","kind":"module","full_name":"Motion::HTML::Assignable","name":"Assignable"},{"html_id":"motion/Motion/HTML/SpecialtyTags","kind":"module","full_name":"Motion::HTML::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"motion/Motion/HTML/SelectHelpers","kind":"module","full_name":"Motion::HTML::SelectHelpers","name":"SelectHelpers"},{"html_id":"motion/Motion/HTML/InputHelpers","kind":"module","full_name":"Motion::HTML::InputHelpers","name":"InputHelpers"},{"html_id":"motion/Motion/HTML/LabelHelpers","kind":"module","full_name":"Motion::HTML::LabelHelpers","name":"LabelHelpers"},{"html_id":"motion/Motion/HTML/CustomTags","kind":"module","full_name":"Motion::HTML::CustomTags","name":"CustomTags"},{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"},{"html_id":"motion/Motion/HTML/BaseTags","kind":"module","full_name":"Motion::HTML::BaseTags","name":"BaseTags"},{"html_id":"motion/Motion/HTML/CheckTagContent","kind":"module","full_name":"Motion::HTML::CheckTagContent","name":"CheckTagContent"}],"locations":[{"filename":"src/motion/html_engine.cr","line_number":8,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html_engine.cr#L8"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"motion/Motion/HTML/AssetHelpers","kind":"module","full_name":"Motion::HTML::AssetHelpers","name":"AssetHelpers"},{"html_id":"motion/Motion/HTML/Assignable","kind":"module","full_name":"Motion::HTML::Assignable","name":"Assignable"},{"html_id":"motion/Motion/HTML/BaseTags","kind":"module","full_name":"Motion::HTML::BaseTags","name":"BaseTags"},{"html_id":"motion/Motion/HTML/CustomTags","kind":"module","full_name":"Motion::HTML::CustomTags","name":"CustomTags"},{"html_id":"motion/Motion/HTML/ForgeryProtectionHelpers","kind":"module","full_name":"Motion::HTML::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers"},{"html_id":"motion/Motion/HTML/HelpfulParagraphError","kind":"module","full_name":"Motion::HTML::HelpfulParagraphError","name":"HelpfulParagraphError"},{"html_id":"motion/Motion/HTML/HTMLTextHelpers","kind":"module","full_name":"Motion::HTML::HTMLTextHelpers","name":"HTMLTextHelpers"},{"html_id":"motion/Motion/HTML/InputHelpers","kind":"module","full_name":"Motion::HTML::InputHelpers","name":"InputHelpers"},{"html_id":"motion/Motion/HTML/LabelHelpers","kind":"module","full_name":"Motion::HTML::LabelHelpers","name":"LabelHelpers"},{"html_id":"motion/Motion/HTML/NumberToCurrency","kind":"module","full_name":"Motion::HTML::NumberToCurrency","name":"NumberToCurrency"},{"html_id":"motion/Motion/HTML/RenderIfDefined","kind":"module","full_name":"Motion::HTML::RenderIfDefined","name":"RenderIfDefined"},{"html_id":"motion/Motion/HTML/SelectHelpers","kind":"module","full_name":"Motion::HTML::SelectHelpers","name":"SelectHelpers"},{"html_id":"motion/Motion/HTML/SpecialtyTags","kind":"module","full_name":"Motion::HTML::SpecialtyTags","name":"SpecialtyTags"},{"html_id":"motion/Motion/HTML/TextHelpers","kind":"module","full_name":"Motion::HTML::TextHelpers","name":"TextHelpers"},{"html_id":"motion/Motion/HTML/TimeHelpers","kind":"module","full_name":"Motion::HTML::TimeHelpers","name":"TimeHelpers"},{"html_id":"motion/Motion/HTML/WithDefaults","kind":"module","full_name":"Motion::HTML::WithDefaults","name":"WithDefaults"},{"html_id":"motion/Motion/MountComponent","kind":"module","full_name":"Motion::MountComponent","name":"MountComponent"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/Base","kind":"class","full_name":"Motion::Base","name":"Base"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"view-instance-method","html_id":"view-instance-method","name":"view","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html_engine.cr#L27","def":{"name":"view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[{"id":"generate_needy_initializer-macro","html_id":"generate_needy_initializer-macro","name":"generate_needy_initializer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html_engine.cr#L49","def":{"name":"generate_needy_initializer","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !@type.abstract? %}\n      {% sorted_assigns = ASSIGNS.sort_by do |dec|\n  has_explicit_value = (((dec.type.is_a?(Metaclass) || (dec.type.types.map(&.id).includes?(Nil.id))) || dec.value) || (dec.value == nil)) || (dec.value == false)\n  has_explicit_value ? 1 : 0\nend %}\n\n      {% for declaration in sorted_assigns %}\n        {% var = declaration.var %}\n        {% type = declaration.type %}\n        {% value = declaration.value %}\n        {% if (type.stringify.ends_with?(\"Nil\")) && (!value)\n  value = nil\nend %}\n        {% has_default = (value || (value == false)) || (value == nil) %}\n        property {{ var.id }} : {{ type }}{% if has_default %} = {{ value }}{% end %}\n      {% end %}\n\n      def initialize(\n        {% for declaration in sorted_assigns %}\n          {% var = declaration.var %}\n          {% type = declaration.type %}\n          {% value = declaration.value %}\n          {% if (type.stringify.ends_with?(\"Nil\")) && (!value)\n  value = nil\nend %}\n          {% has_default = (value || (value == false)) || (value == nil) %}\n          @{{ var.id }} : {{ type }}{% if has_default %} = {{ value }}{% end %},\n        {% end %}\n        # Removed due to json serialization bug\n        # **unused_exposures\n        )\n      end\n    {% end %}\n\n  \n"}},{"id":"setup_initializer_hook-macro","html_id":"setup_initializer_hook-macro","name":"setup_initializer_hook","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html_engine.cr#L31","def":{"name":"setup_initializer_hook","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro finished\n      generate_needy_initializer\n    \nend\n\n    macro included\n      setup_initializer_hook\n    \nend\n\n    macro inherited\n      setup_initializer_hook\n    \nend\n  \n"}}],"types":[]},{"html_id":"motion/Motion/HTML/ForgeryProtectionHelpers","path":"Motion/HTML/ForgeryProtectionHelpers.html","kind":"module","full_name":"Motion::HTML::ForgeryProtectionHelpers","name":"ForgeryProtectionHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/forgery_protection_helpers.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/forgery_protection_helpers.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"csrf_hidden_input:Nil-instance-method","html_id":"csrf_hidden_input:Nil-instance-method","name":"csrf_hidden_input","doc":"Generate a hidden input with the request CSRF token\n\nThis input is automatically generated when using\n`Motion::FormHelpers#form_for`. It creates a hidden input with the CSRF\ntoken. THis ensures that the form is safe. If you try to submit a form\nwithout a CSRF token it will fail with a 403 forbidden status code.","summary":"<p>Generate a hidden input with the request CSRF token</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/forgery_protection_helpers.cr#L8","def":{"name":"csrf_hidden_input","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"input(type: \"hidden\", name: ProtectFromForgery::PARAM_KEY, value: ProtectFromForgery.get_token(@context))"}},{"id":"csrf_meta_tags:Nil-instance-method","html_id":"csrf_meta_tags:Nil-instance-method","name":"csrf_meta_tags","doc":"Meta tags used for submitting AJAX links and forms\n\nThese tags are automatically added to MainLayout when generating a new\nproject. They are used by Rails UJS to safely submit forms and non-GET AJAX\nrequests","summary":"<p>Meta tags used for submitting AJAX links and forms</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/forgery_protection_helpers.cr#L19","def":{"name":"csrf_meta_tags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"meta(name: \"csrf-param\", content: ProtectFromForgery::PARAM_KEY)\nmeta(name: \"csrf-token\", content: ProtectFromForgery.get_token(@context))\n"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/HTMLTextHelpers","path":"Motion/HTML/HTMLTextHelpers.html","kind":"module","full_name":"Motion::HTML::HTMLTextHelpers","name":"HTMLTextHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/page_helpers/html_text_helpers.cr","line_number":2,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L2"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":"These helper methods will write directly to the view.","summary":"<p>These helper methods will write directly to the view.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"highlight(text:String,phrases:Array(String|Regex),highlighter:Proc|String=&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;,escape:Bool=true):Nil-instance-method","html_id":"highlight(text:String,phrases:Array(String|Regex),highlighter:Proc|String=&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;,escape:Bool=true):Nil-instance-method","name":"highlight","doc":"Wrap phrases to make them stand out\n\nThis will wrap all the phrases inside a piece of `text` specified by the\n`phrases` array. The default is to wrap each with the `<mark>` element.\nThis can be customized with the `highlighter` argument.\n\n**Note: This method writes HTML directly to the page. It does not return a\nString**\n\n```crystal\nhighlight(\"Crystal is type-safe and compiled.\", phrases: [\"type-safe\", \"compiled\"])\n```\noutputs:\n```html\nCrystal is <mark>type-safe</mark> and <mark>compiled</mark>.\n```\n\n**With a custom highlighter**\n\n```crystal\nhighlight(\n  \"You're such a nice and attractive person.\",\n  phrases: [\"nice\", \"attractive\"],\n  highlighter: \"<strong>\\\\1</strong>\"\n)\n```\noutputs:\n```html\nYou're such a <strong>nice</strong> and <strong>attractive</strong> person.\n```","summary":"<p>Wrap phrases to make them stand out</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrases","doc":null,"default_value":"","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"highlighter","doc":null,"default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrases : Array(String | Regex), highlighter : Proc | String = <span class=\"s\">&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;</span>, escape : Bool = <span class=\"n\">true</span>) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L73","def":{"name":"highlight","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrases","doc":null,"default_value":"","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"highlighter","doc":null,"default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"text = escape ? HTML.escape(text) : text\nif text.blank? || phrases.all? do |__arg0|\n  __arg0.to_s.blank?\nend\n  raw((  text || \"\"))\nelse\n  match = phrases.map do |p|\n    p.is_a?(Regex) ? p.to_s : Regex.escape(p.to_s)\n  end.join(\"|\")\n  if highlighter.is_a?(Proc)\n    raw(text.gsub(/(#{match})(?![^<]*?>)/i, &highlighter))\n  else\n    raw(text.gsub(/(#{match})(?![^<]*?>)/i, highlighter))\n  end\nend\n"}},{"id":"highlight(text:String,phrases:Array(String|Regex),escape:Bool=false,&block:String->_):Nil-instance-method","html_id":"highlight(text:String,phrases:Array(String|Regex),escape:Bool=false,&block:String->_):Nil-instance-method","name":"highlight","doc":"Highlight a single phrase\n\nExactly the same as the `highlight` that takes multiple phrases, but with a\nsingular `phrase` argument for readability.\n```","summary":"<p>Highlight a single phrase</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrases","doc":null,"default_value":"","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"escape","doc":null,"default_value":"false","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrases : Array(String | Regex), escape : Bool = <span class=\"n\">false</span>, &block : String -> _) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L96","def":{"name":"highlight","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrases","doc":null,"default_value":"","external_name":"phrases","restriction":"Array(String | Regex)"},{"name":"escape","doc":null,"default_value":"false","external_name":"escape","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> _)"},"return_type":"Nil","visibility":"Public","body":"highlight(text, phrases, highlighter: block, escape: escape)"}},{"id":"highlight(text:String,phrase:String|Regex,highlighter:Proc|String=&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;,escape:Bool=true):Nil-instance-method","html_id":"highlight(text:String,phrase:String|Regex,highlighter:Proc|String=&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;,escape:Bool=true):Nil-instance-method","name":"highlight","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":"String | Regex"},{"name":"highlighter","doc":null,"default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrase : String | Regex, highlighter : Proc | String = <span class=\"s\">&quot;&lt;mark&gt;\\\\1&lt;/mark&gt;&quot;</span>, escape : Bool = <span class=\"n\">true</span>) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L100","def":{"name":"highlight","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":"String | Regex"},{"name":"highlighter","doc":null,"default_value":"\"<mark>\\\\1</mark>\"","external_name":"highlighter","restriction":"Proc | String"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"phrases = [phrase] of String | Regex\nhighlight(text, phrases, highlighter: highlighter, escape: escape)\n"}},{"id":"highlight(text:String,phrase:String|Regex,escape:Bool=true,&block:String->_):Nil-instance-method","html_id":"highlight(text:String,phrase:String|Regex,escape:Bool=true,&block:String->_):Nil-instance-method","name":"highlight","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":"String | Regex"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, phrase : String | Regex, escape : Bool = <span class=\"n\">true</span>, &block : String -> _) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L105","def":{"name":"highlight","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":"String | Regex"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> _)"},"return_type":"Nil","visibility":"Public","body":"phrases = [phrase] of String | Regex\nhighlight(text, phrases, highlighter: block, escape: escape)\n"}},{"id":"simple_format(text:String,&block:String->_):Nil-instance-method","html_id":"simple_format(text:String,&block:String->_):Nil-instance-method","name":"simple_format","doc":"Wraps text in whatever you'd like based on line breaks\n\n**Note: This method writes HTML directly to the page. It does not return a\nString**\n\n```crystal\nsimple_format(\"foo\\n\\nbar\\n\\nbaz\") do |paragraph|\n  text paragraph\n  hr\nend\n```\noutputs:\n```html\nfoo<hr>\n\nbar<hr>\n\nbaz<hr>\n```","summary":"<p>Wraps text in whatever you'd like based on line breaks</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String, &block : String -> _) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L129","def":{"name":"simple_format","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> _)"},"return_type":"Nil","visibility":"Public","body":"paragraphs = split_paragraphs(text)\nif paragraphs.empty?\n  paragraphs = [\"\"]\nend\nparagraphs.each do |paragraph|\n  yield paragraph\n  if paragraph == paragraphs.last\n  else\n    raw(\"\\n\\n\")\n  end\nend\nview\n"}},{"id":"simple_format(text:String,escape:Bool=true,**html_options):Nil-instance-method","html_id":"simple_format(text:String,escape:Bool=true,**html_options):Nil-instance-method","name":"simple_format","doc":"Wraps text in paragraphs based on line breaks\n\n```crystal\nsimple_format(\"foo\\n\\nbar\\n\\nbaz\")\n```\noutputs:\n```html\n<p>foo</p>\n\n<p>bar</p>\n\n<p>baz</p>\n```","summary":"<p>Wraps text in paragraphs based on line breaks</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, escape : Bool = <span class=\"n\">true</span>, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L154","def":{"name":"simple_format","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"text = escape ? HTML.escape(text) : text\nsimple_format(text) do |formatted_text|\n  para(html_options) do\n    raw(formatted_text)\n  end\nend\n"}},{"id":"truncate(text:String,length:Int32=30,omission:String=&quot;...&quot;,separator:String?=nil,escape:Bool=true,blk:Proc?=nil):Nil-instance-method","html_id":"truncate(text:String,length:Int32=30,omission:String=&quot;...&quot;,separator:String?=nil,escape:Bool=true,blk:Proc?=nil):Nil-instance-method","name":"truncate","doc":"Shortens text after a length point and inserts content afterward\n\n**Note: This method writes HTML directly to the page. It does not return a\nString.**\n\nThis is ideal if you want an action associated with shortened text, like\n\"Read more\".\n\n* `length` (default: `30`) will control the maximum length of the text,\nincluding the `omission`.\n* `omission` (default: `...`) will insert itself at the end of the\ntruncated text.\n* `separator` (default: nil) is where words are cut off. This is often\noverridden to break on word boundaries by setting the separator to a space\n`\" \"`. Keep in mind this, may cause your text to be truncated before your\n`length` value if the `length` - `omission` is before the `separator`.\n* `escape` (default: true) weather or not to HTML escape the truncated\nstring.\n* `blk` (default: nil) A block to run after the text has been truncated.\nOften used to add an action to read more text, like a \"Read more\" link.\n\n```crystal\ntruncate(\"Four score and seven years ago\", length: 20) do\n  link \"Read more\", to: \"#\"\nend\n```\noutputs:\n```html\n\"Four score and se...<a href=\"#\">Read more</a>\"\n```","summary":"<p>Shortens text after a length point and inserts content afterward</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","doc":null,"default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"},{"name":"blk","doc":null,"default_value":"nil","external_name":"blk","restriction":"Nil | Proc"}],"args_string":"(text : String, length : Int32 = <span class=\"n\">30</span>, omission : String = <span class=\"s\">&quot;...&quot;</span>, separator : String? = <span class=\"n\">nil</span>, escape : Bool = <span class=\"n\">true</span>, blk : Proc? = <span class=\"n\">nil</span>) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L33","def":{"name":"truncate","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","doc":null,"default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"},{"name":"blk","doc":null,"default_value":"nil","external_name":"blk","restriction":"Nil | Proc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"content = truncate_text(text, length, omission, separator)\nraw((escape ? HTML.escape(content) : content))\nif (!blk.nil?) && text.size > length\n  blk.call\nend\n"}},{"id":"truncate(text:String,length:Int32=30,omission:String=&quot;...&quot;,separator:String?=nil,escape:Bool=true,&block:->_):Nil-instance-method","html_id":"truncate(text:String,length:Int32=30,omission:String=&quot;...&quot;,separator:String?=nil,escape:Bool=true,&block:->_):Nil-instance-method","name":"truncate","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","doc":null,"default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"args_string":"(text : String, length : Int32 = <span class=\"n\">30</span>, omission : String = <span class=\"s\">&quot;...&quot;</span>, separator : String? = <span class=\"n\">nil</span>, escape : Bool = <span class=\"n\">true</span>, &block :  -> _) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/html_text_helpers.cr#L39","def":{"name":"truncate","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","doc":null,"default_value":"nil","external_name":"separator","restriction":"String | Nil"},{"name":"escape","doc":null,"default_value":"true","external_name":"escape","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> _)"},"return_type":"Nil","visibility":"Public","body":"truncate(text, length, omission, separator, escape, blk: block)"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/InputHelpers","path":"Motion/HTML/InputHelpers.html","kind":"module","full_name":"Motion::HTML::InputHelpers","name":"InputHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/input_helpers.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"EMPTY_BOOLEAN_ATTRIBUTES","name":"EMPTY_BOOLEAN_ATTRIBUTES","value":"[] of Symbol","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"checkbox(field:Avram::PermittedAttribute(T),unchecked_value:String,checked_value:String,**html_options):NilforallT-instance-method","html_id":"checkbox(field:Avram::PermittedAttribute(T),unchecked_value:String,checked_value:String,**html_options):NilforallT-instance-method","name":"checkbox","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(T)"},{"name":"unchecked_value","doc":null,"default_value":"","external_name":"unchecked_value","restriction":"String"},{"name":"checked_value","doc":null,"default_value":"","external_name":"checked_value","restriction":"String"}],"args_string":"(field : Avram::PermittedAttribute(T), unchecked_value : String, checked_value : String, **html_options) : Nil forall T","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L64","def":{"name":"checkbox","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(T)"},{"name":"unchecked_value","doc":null,"default_value":"","external_name":"unchecked_value","restriction":"String"},{"name":"checked_value","doc":null,"default_value":"","external_name":"checked_value","restriction":"String"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if field.param == checked_value\n  html_options = merge_options(html_options, {\"checked\" => \"true\"})\nend\nhtml_options = merge_options(html_options, {\"value\" => checked_value})\ngenerate_input(field, \"hidden\", {\"id\" => \"\"}, {\"value\" => unchecked_value})\ngenerate_input(field, \"checkbox\", html_options)\n"}},{"id":"checkbox(field:Avram::PermittedAttribute(Bool?),attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"checkbox(field:Avram::PermittedAttribute(Bool?),attrs:Array(Symbol),**html_options):Nil-instance-method","name":"checkbox","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(Bool | ::Nil)"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute(Bool?), attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L80","def":{"name":"checkbox","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(Bool | ::Nil)"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"unchecked_value = \"false\"\nif field.value\n  html_options = merge_options(html_options, {\"checked\" => \"true\"})\nend\nhtml_options = merge_options(html_options, {\"value\" => \"true\"})\ngenerate_input(field, \"hidden\", {\"id\" => \"\"}, {\"value\" => unchecked_value})\ngenerate_input(field, \"checkbox\", html_options, attrs: attrs)\n"}},{"id":"checkbox(field:Avram::PermittedAttribute(Bool?),**html_options):Nil-instance-method","html_id":"checkbox(field:Avram::PermittedAttribute(Bool?),**html_options):Nil-instance-method","name":"checkbox","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(Bool | ::Nil)"}],"args_string":"(field : Avram::PermittedAttribute(Bool?), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L76","def":{"name":"checkbox","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(Bool | ::Nil)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"checkbox(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"checkbox(field:Avram::Attribute,**options)-instance-method","html_id":"checkbox(field:Avram::Attribute,**options)-instance-method","name":"checkbox","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L90","def":{"name":"checkbox","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"color_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"color_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"color_input","doc":"Similar to color_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\ncolor_input(attribute, attrs: [:required])\n# => <input type=\"color\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to color_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"color_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"color\", html_options, attrs: attrs)"}},{"id":"color_input(field:Avram::Attribute,**options)-instance-method","html_id":"color_input(field:Avram::Attribute,**options)-instance-method","name":"color_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"color_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"color_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"color_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"color_input","doc":"Returns a color input field.\n\n```\ncolor_input(attribute)\n# => <input type=\"color\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a color input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"color_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"color_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"date_input(field:Avram::Attribute,**options)-instance-method","html_id":"date_input(field:Avram::Attribute,**options)-instance-method","name":"date_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L180","def":{"name":"date_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"date_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"date_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"date_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L182","def":{"name":"date_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"date_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"date_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"date_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"date_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L186","def":{"name":"date_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = field.value.try(&.to_s(\"%Y-%m-%d\")) || field.param.to_s\ngenerate_input(field, \"date\", html_options, input_overrides: {\"value\" => value}, attrs: attrs)\n"}},{"id":"datetime_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"datetime_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"datetime_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L193","def":{"name":"datetime_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"datetime_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"datetime_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"datetime_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"datetime_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L197","def":{"name":"datetime_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = field.value.try(&.to_s(\"%Y-%m-%dT%H:%M:%S\")) || field.param.to_s\ngenerate_input(field, \"datetime-local\", html_options, input_overrides: {\"value\" => value}, attrs: attrs)\n"}},{"id":"datetime_input(field:Avram::Attribute,**options)-instance-method","html_id":"datetime_input(field:Avram::Attribute,**options)-instance-method","name":"datetime_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L191","def":{"name":"datetime_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"email_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"email_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"email_input","doc":"Similar to email_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nemail_input(attribute, attrs: [:required])\n# => <input type=\"email\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to email_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"email_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"email\", html_options, attrs: attrs)"}},{"id":"email_input(field:Avram::Attribute,**options)-instance-method","html_id":"email_input(field:Avram::Attribute,**options)-instance-method","name":"email_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"email_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"email_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"email_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"email_input","doc":"Returns a email input field.\n\n```\nemail_input(attribute)\n# => <input type=\"email\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a email input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"email_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"email_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"file_input(field:Avram::Attribute,**options)-instance-method","html_id":"file_input(field:Avram::Attribute,**options)-instance-method","name":"file_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"file_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"file_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"file_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"file_input","doc":"Similar to file_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nfile_input(attribute, attrs: [:required])\n# => <input type=\"file\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to file_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"file_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"file\", html_options, attrs: attrs)"}},{"id":"file_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"file_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"file_input","doc":"Returns a file input field.\n\n```\nfile_input(attribute)\n# => <input type=\"file\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a file input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"file_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"file_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"hidden_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"hidden_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"hidden_input","doc":"Similar to hidden_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nhidden_input(attribute, attrs: [:required])\n# => <input type=\"hidden\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to hidden_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"hidden_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"hidden\", html_options, attrs: attrs)"}},{"id":"hidden_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"hidden_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"hidden_input","doc":"Returns a hidden input field.\n\n```\nhidden_input(attribute)\n# => <input type=\"hidden\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a hidden input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"hidden_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"hidden_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"hidden_input(field:Avram::Attribute,**options)-instance-method","html_id":"hidden_input(field:Avram::Attribute,**options)-instance-method","name":"hidden_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"hidden_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"number_input(field:Avram::Attribute,**options)-instance-method","html_id":"number_input(field:Avram::Attribute,**options)-instance-method","name":"number_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"number_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"number_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"number_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"number_input","doc":"Returns a number input field.\n\n```\nnumber_input(attribute)\n# => <input type=\"number\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a number input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"number_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"number_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"number_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"number_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"number_input","doc":"Similar to number_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nnumber_input(attribute, attrs: [:required])\n# => <input type=\"number\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to number_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"number_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"number\", html_options, attrs: attrs)"}},{"id":"password_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"password_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"password_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L161","def":{"name":"password_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"password_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"password_input(field:Avram::Attribute,**options)-instance-method","html_id":"password_input(field:Avram::Attribute,**options)-instance-method","name":"password_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L159","def":{"name":"password_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"password_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"password_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"password_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L165","def":{"name":"password_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"password\", html_options, {\"value\" => \"\"}, attrs)"}},{"id":"radio(field:Avram::PermittedAttribute(String?),checked_value:String,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"radio(field:Avram::PermittedAttribute(String?),checked_value:String,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"radio","doc":"Similar to radio; this allows for Boolean attributes through `attrs`.\n\n```\nradio(attribute, \"checked_value\", attrs: [:required])\n# => <input type=\"radio\" id=\"param_key_attribute_name_checked_value\" name=\"param_key:attribute_name\" value=\"checked_value\" checked=\"true\" required />\n```","summary":"<p>Similar to radio; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(String | ::Nil)"},{"name":"checked_value","doc":null,"default_value":"","external_name":"checked_value","restriction":"String"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute(String?), checked_value : String, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L110","def":{"name":"radio","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(String | ::Nil)"},{"name":"checked_value","doc":null,"default_value":"","external_name":"checked_value","restriction":"String"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if field.value == checked_value\n  html_options = merge_options(html_options, {\"checked\" => \"true\"})\nend\noverrides = {\"id\" => (input_id(field)) + \"_#{checked_value}\", \"value\" => checked_value}\nhtml_options = merge_options(html_options, overrides)\ngenerate_input(field, \"radio\", html_options, attrs: attrs)\n"}},{"id":"radio(field:Avram::PermittedAttribute(String?),checked_value:String,**html_options):Nil-instance-method","html_id":"radio(field:Avram::PermittedAttribute(String?),checked_value:String,**html_options):Nil-instance-method","name":"radio","doc":"Returns a radio input field.\n\n```\nradio(attribute, \"checked_value\")\n# => <input type=\"radio\" id=\"param_key_attribute_name_checked_value\" name=\"param_key:attribute_name\" value=\"checked_value\" checked=\"true\">\n```","summary":"<p>Returns a radio input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(String | ::Nil)"},{"name":"checked_value","doc":null,"default_value":"","external_name":"checked_value","restriction":"String"}],"args_string":"(field : Avram::PermittedAttribute(String?), checked_value : String, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L98","def":{"name":"radio","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(String | ::Nil)"},{"name":"checked_value","doc":null,"default_value":"","external_name":"checked_value","restriction":"String"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"radio(field, checked_value, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"radio(field:Avram::Attribute,**options)-instance-method","html_id":"radio(field:Avram::Attribute,**options)-instance-method","name":"radio","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L122","def":{"name":"radio","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"range_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"range_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"range_input","doc":"Similar to range_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nrange_input(attribute, attrs: [:required])\n# => <input type=\"range\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to range_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"range_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"range\", html_options, attrs: attrs)"}},{"id":"range_input(field:Avram::Attribute,**options)-instance-method","html_id":"range_input(field:Avram::Attribute,**options)-instance-method","name":"range_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"range_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"range_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"range_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"range_input","doc":"Returns a range input field.\n\n```\nrange_input(attribute)\n# => <input type=\"range\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a range input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"range_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"range_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"search_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"search_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"search_input","doc":"Similar to search_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nsearch_input(attribute, attrs: [:required])\n# => <input type=\"search\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to search_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"search_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"search\", html_options, attrs: attrs)"}},{"id":"search_input(field:Avram::Attribute,**options)-instance-method","html_id":"search_input(field:Avram::Attribute,**options)-instance-method","name":"search_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"search_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"search_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"search_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"search_input","doc":"Returns a search input field.\n\n```\nsearch_input(attribute)\n# => <input type=\"search\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a search input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"search_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"search_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"submit(text:String,**html_options):Nil-instance-method","html_id":"submit(text:String,**html_options):Nil-instance-method","name":"submit","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L34","def":{"name":"submit","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"input(merge_options(html_options, {\"type\" => \"submit\", \"value\" => text}))"}},{"id":"telephone_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"telephone_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"telephone_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L151","def":{"name":"telephone_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"telephone_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"telephone_input(field:Avram::Attribute,**options)-instance-method","html_id":"telephone_input(field:Avram::Attribute,**options)-instance-method","name":"telephone_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L149","def":{"name":"telephone_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"telephone_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"telephone_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"telephone_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L155","def":{"name":"telephone_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"tel\", html_options, attrs: attrs)"}},{"id":"text_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"text_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"text_input","doc":"Similar to text_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\ntext_input(attribute, attrs: [:required])\n# => <input type=\"text\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to text_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"text_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"text\", html_options, attrs: attrs)"}},{"id":"text_input(field:Avram::Attribute,**options)-instance-method","html_id":"text_input(field:Avram::Attribute,**options)-instance-method","name":"text_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"text_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"text_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"text_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"text_input","doc":"Returns a text input field.\n\n```\ntext_input(attribute)\n# => <input type=\"text\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a text input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"text_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"text_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"textarea(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"textarea(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"textarea","doc":"Returns a textarea field.\n\n```\ntextarea(attribute)\n# => <textarea id=\"param_key_attribute_name\" name=\"param_key:attribute_name\"></textarea>\n```","summary":"<p>Returns a textarea field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L46","def":{"name":"textarea","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"textarea(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"textarea(field:Avram::Attribute,**options)-instance-method","html_id":"textarea(field:Avram::Attribute,**options)-instance-method","name":"textarea","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L38","def":{"name":"textarea","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"textarea(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"textarea(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"textarea","doc":"Similar to textarea; this allows for Boolean attributes\nthrough `attrs`.\n\n```\ntextarea(attribute, attrs: [:required])\n# => <textarea id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" required></textarea>\n```","summary":"<p>Similar to textarea; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L57","def":{"name":"textarea","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"textarea(field.param.to_s, merge_options(html_options, {\"id\" => input_id(field), \"name\" => input_name(field)}), attrs: attrs)"}},{"id":"time_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"time_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"time_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L175","def":{"name":"time_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = field.value.try(&.to_s(\"%H:%M:%S\")) || field.param.to_s\ngenerate_input(field, \"time\", html_options, input_overrides: {\"value\" => value}, attrs: attrs)\n"}},{"id":"time_input(field:Avram::Attribute,**options)-instance-method","html_id":"time_input(field:Avram::Attribute,**options)-instance-method","name":"time_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L169","def":{"name":"time_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"time_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"time_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"time_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L171","def":{"name":"time_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"time_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"url_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","html_id":"url_input(field:Avram::PermittedAttribute,**html_options):Nil-instance-method","name":"url_input","doc":"Returns a url input field.\n\n```\nurl_input(attribute)\n# => <input type=\"url\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" />\n```","summary":"<p>Returns a url input field.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"url_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"url_input(field, EMPTY_BOOLEAN_ATTRIBUTES, **html_options)"}},{"id":"url_input(field:Avram::Attribute,**options)-instance-method","html_id":"url_input(field:Avram::Attribute,**options)-instance-method","name":"url_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"args_string":"(field : Avram::Attribute, **options)","source_link":null,"def":{"name":"url_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::Attribute"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"url_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","html_id":"url_input(field:Avram::PermittedAttribute,attrs:Array(Symbol),**html_options):Nil-instance-method","name":"url_input","doc":"Similar to url_input; this allows for Boolean attributes\nthrough `attrs`.\n\n```\nurl_input(attribute, attrs: [:required])\n# => <input type=\"url\" id=\"param_key_attribute_name\" name=\"param_key:attribute_name\" value=\"\" required />\n```","summary":"<p>Similar to url_input; this allows for Boolean attributes through <code>attrs</code>.</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"args_string":"(field : Avram::PermittedAttribute, attrs : Array(Symbol), **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L124","def":{"name":"url_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"attrs","doc":null,"default_value":"","external_name":"attrs","restriction":"Array(Symbol)"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"generate_input(field, \"url\", html_options, attrs: attrs)"}}],"macros":[{"id":"error_message_for_unallowed_field-macro","html_id":"error_message_for_unallowed_field-macro","name":"error_message_for_unallowed_field","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L4","def":{"name":"error_message_for_unallowed_field","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"The database attribute for the operation is not permitted and cannot be used in a form.\\n\\nTry allowing the attribute to be filled...\\n\\n    class MySaveOperation # SaveUser, SaveTask, etc.\\n      permit_columns {attribute_name}\\n    end\\n\\nView more about 'permit_columns'\\n\\n  https://luckyframework.org/guides/database/validating-saving#perma-permitting-columns\\n\\nQ. Why aren't database attributes permitted by default?\\nA. Malicious users could submit any value they want. For example: you\\n   might have an 'admin' flag on a User. If all attributes were\\n   permitted, a malicious user could set the 'admin' flag to 'true'\\n   on any form.\\n\") %}\n\n  \n"}},{"id":"generate_helpful_error_for(input_method_name)-macro","html_id":"generate_helpful_error_for(input_method_name)-macro","name":"generate_helpful_error_for","doc":null,"summary":null,"abstract":false,"args":[{"name":"input_method_name","doc":null,"default_value":"","external_name":"input_method_name","restriction":""}],"args_string":"(input_method_name)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/input_helpers.cr#L28","def":{"name":"generate_helpful_error_for","args":[{"name":"input_method_name","doc":null,"default_value":"","external_name":"input_method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ input_method_name.id }}\n(field : Avram::Attribute, **options)\n      Motion::InputHelpers.error_message_for_unallowed_field\n    \nend\n  \n"}}],"types":[]},{"html_id":"motion/Motion/HTML/LabelHelpers","path":"Motion/HTML/LabelHelpers.html","kind":"module","full_name":"Motion::HTML::LabelHelpers","name":"LabelHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/label_helpers.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/label_helpers.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"label_for(field:Avram::PermittedAttribute,text:String?=nil,**html_options):Nil-instance-method","html_id":"label_for(field:Avram::PermittedAttribute,text:String?=nil,**html_options):Nil-instance-method","name":"label_for","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"text","doc":null,"default_value":"nil","external_name":"text","restriction":"String | ::Nil"}],"args_string":"(field : Avram::PermittedAttribute, text : String? = <span class=\"n\">nil</span>, **html_options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/label_helpers.cr#L2","def":{"name":"label_for","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"},{"name":"text","doc":null,"default_value":"nil","external_name":"text","restriction":"String | ::Nil"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"label(text || (guess_label_name(field)), merge_options(html_options, {\"for\" => input_id(field)}))"}},{"id":"label_for(field:Avram::PermittedAttribute,**html_options,&):Nil-instance-method","html_id":"label_for(field:Avram::PermittedAttribute,**html_options,&):Nil-instance-method","name":"label_for","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options, &) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/label_helpers.cr#L9","def":{"name":"label_for","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"label(merge_options(html_options, {\"for\" => input_id(field)})) do\n  yield\nend"}},{"id":"label_for(field,**options):Nil-instance-method","html_id":"label_for(field,**options):Nil-instance-method","name":"label_for","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"args_string":"(field, **options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/label_helpers.cr#L15","def":{"name":"label_for","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field"}},{"id":"label_for(field,**options,&):Nil-instance-method","html_id":"label_for(field,**options,&):Nil-instance-method","name":"label_for","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"args_string":"(field, **options, &) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/label_helpers.cr#L19","def":{"name":"label_for","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Motion::InputHelpers.error_message_for_unallowed_field\nyield\n"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/NumberToCurrency","path":"Motion/HTML/NumberToCurrency.html","kind":"module","full_name":"Motion::HTML::NumberToCurrency","name":"NumberToCurrency","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/page_helpers/number_to_currency.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/number_to_currency.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_DELIMITER","name":"DEFAULT_DELIMITER","value":"\",\"","doc":null,"summary":null},{"id":"DEFAULT_DELIMITER_REGEX","name":"DEFAULT_DELIMITER_REGEX","value":"/(\\d)(?=(\\d\\d\\d)+(?!\\d))/","doc":null,"summary":null},{"id":"DEFAULT_FORMAT","name":"DEFAULT_FORMAT","value":"\"%u%n\"","doc":null,"summary":null},{"id":"DEFAULT_PRECISION","name":"DEFAULT_PRECISION","value":"2","doc":null,"summary":null},{"id":"DEFAULT_SEPARATOR","name":"DEFAULT_SEPARATOR","value":"\".\"","doc":null,"summary":null},{"id":"DEFAULT_UNIT","name":"DEFAULT_UNIT","value":"\"$\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"number_to_currency(value:Float|Int32|String,precision:Int32=DEFAULT_PRECISION,unit:String=DEFAULT_UNIT,separator:String=DEFAULT_SEPARATOR,delimiter:String=DEFAULT_DELIMITER,delimiter_pattern:Regex=DEFAULT_DELIMITER_REGEX,format:String=DEFAULT_FORMAT,negative_format:String=DEFAULT_FORMAT):String-instance-method","html_id":"number_to_currency(value:Float|Int32|String,precision:Int32=DEFAULT_PRECISION,unit:String=DEFAULT_UNIT,separator:String=DEFAULT_SEPARATOR,delimiter:String=DEFAULT_DELIMITER,delimiter_pattern:Regex=DEFAULT_DELIMITER_REGEX,format:String=DEFAULT_FORMAT,negative_format:String=DEFAULT_FORMAT):String-instance-method","name":"number_to_currency","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float | Int32 | String"},{"name":"precision","doc":null,"default_value":"DEFAULT_PRECISION","external_name":"precision","restriction":"Int32"},{"name":"unit","doc":null,"default_value":"DEFAULT_UNIT","external_name":"unit","restriction":"String"},{"name":"separator","doc":null,"default_value":"DEFAULT_SEPARATOR","external_name":"separator","restriction":"String"},{"name":"delimiter","doc":null,"default_value":"DEFAULT_DELIMITER","external_name":"delimiter","restriction":"String"},{"name":"delimiter_pattern","doc":null,"default_value":"DEFAULT_DELIMITER_REGEX","external_name":"delimiter_pattern","restriction":"Regex"},{"name":"format","doc":null,"default_value":"DEFAULT_FORMAT","external_name":"format","restriction":"String"},{"name":"negative_format","doc":null,"default_value":"DEFAULT_FORMAT","external_name":"negative_format","restriction":"String"}],"args_string":"(value : Float | Int32 | String, precision : Int32 = <span class=\"t\">DEFAULT_PRECISION</span>, unit : String = <span class=\"t\">DEFAULT_UNIT</span>, separator : String = <span class=\"t\">DEFAULT_SEPARATOR</span>, delimiter : String = <span class=\"t\">DEFAULT_DELIMITER</span>, delimiter_pattern : Regex = <span class=\"t\">DEFAULT_DELIMITER_REGEX</span>, format : String = <span class=\"t\">DEFAULT_FORMAT</span>, negative_format : String = <span class=\"t\">DEFAULT_FORMAT</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/number_to_currency.cr#L9","def":{"name":"number_to_currency","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float | Int32 | String"},{"name":"precision","doc":null,"default_value":"DEFAULT_PRECISION","external_name":"precision","restriction":"Int32"},{"name":"unit","doc":null,"default_value":"DEFAULT_UNIT","external_name":"unit","restriction":"String"},{"name":"separator","doc":null,"default_value":"DEFAULT_SEPARATOR","external_name":"separator","restriction":"String"},{"name":"delimiter","doc":null,"default_value":"DEFAULT_DELIMITER","external_name":"delimiter","restriction":"String"},{"name":"delimiter_pattern","doc":null,"default_value":"DEFAULT_DELIMITER_REGEX","external_name":"delimiter_pattern","restriction":"Regex"},{"name":"format","doc":null,"default_value":"DEFAULT_FORMAT","external_name":"format","restriction":"String"},{"name":"negative_format","doc":null,"default_value":"DEFAULT_FORMAT","external_name":"negative_format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"value = value.to_s\nif value.to_f.sign == -1\n  if negative_format != DEFAULT_FORMAT\n    format = negative_format\n  end\n  value = value.to_f.abs.to_s\nend\nvalue = \"%.#{precision}f\" % value\nleft, right = value.split(\".\")\nleft = left.gsub(delimiter_pattern) do |digit_to_delimit|\n  \"#{digit_to_delimit}#{delimiter}\"\nend\nnumber = \"#{left}#{separator}#{right}\"\n(format.gsub(\"%n\", number)).gsub(\"%u\", unit)\n"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/RenderIfDefined","path":"Motion/HTML/RenderIfDefined.html","kind":"module","full_name":"Motion::HTML::RenderIfDefined","name":"RenderIfDefined","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/page_helpers/render_if_defined.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/render_if_defined.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"render_if_defined(method_name)-macro","html_id":"render_if_defined(method_name)-macro","name":"render_if_defined","doc":null,"summary":null,"abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/render_if_defined.cr#L2","def":{"name":"render_if_defined","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    if self.responds_to?(:\n{{ method_name.id }}\n)\n      self.\n{{ method_name.id }}\n()\n    \nend\n  \n"}}],"types":[]},{"html_id":"motion/Motion/HTML/SelectHelpers","path":"Motion/HTML/SelectHelpers.html","kind":"module","full_name":"Motion::HTML::SelectHelpers","name":"SelectHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/select_helpers.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/select_helpers.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"options_for_select(field:Avram::PermittedAttribute(T),select_options:Array(Tuple(String,T)),**html_options):NilforallT-instance-method","html_id":"options_for_select(field:Avram::PermittedAttribute(T),select_options:Array(Tuple(String,T)),**html_options):NilforallT-instance-method","name":"options_for_select","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(T)"},{"name":"select_options","doc":null,"default_value":"","external_name":"select_options","restriction":"Array(Tuple(String, T))"}],"args_string":"(field : Avram::PermittedAttribute(T), select_options : Array(Tuple(String, T)), **html_options) : Nil forall T","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/select_helpers.cr#L8","def":{"name":"options_for_select","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute(T)"},{"name":"select_options","doc":null,"default_value":"","external_name":"select_options","restriction":"Array(Tuple(String, T))"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"select_options.each do |option_name, option_value|\n  attributes = {\"value\" => option_value.to_s}\n  is_selected = option_value.to_s == field.param.to_s\n  if is_selected\n    attributes[\"selected\"] = \"true\"\n  end\n  option(option_name, merge_options(html_options, attributes))\nend"}},{"id":"select_input(field:Avram::PermittedAttribute,**html_options,&):Nil-instance-method","html_id":"select_input(field:Avram::PermittedAttribute,**html_options,&):Nil-instance-method","name":"select_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"args_string":"(field : Avram::PermittedAttribute, **html_options, &) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/select_helpers.cr#L2","def":{"name":"select_input","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"Avram::PermittedAttribute"}],"double_splat":{"name":"html_options","doc":null,"default_value":"","external_name":"html_options","restriction":""},"splat_index":null,"yields":0,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"select_tag(merge_options(html_options, {\"name\" => input_name(field)})) do\n  yield\nend"}},{"id":"select_prompt(label:String):Nil-instance-method","html_id":"select_prompt(label:String):Nil-instance-method","name":"select_prompt","doc":"Renders an <option> HTML tag with no value\nThe text is set to `label`.","summary":"<p>Renders an &lt;option> HTML tag with no value The text is set to <code>label</code>.</p>","abstract":false,"args":[{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":"String"}],"args_string":"(label : String) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/select_helpers.cr#L21","def":{"name":"select_prompt","args":[{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"option(label, value: \"\")"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/SpecialtyTags","path":"Motion/HTML/SpecialtyTags.html","kind":"module","full_name":"Motion::HTML::SpecialtyTags","name":"SpecialtyTags","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/specialty_tags.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"canonical_link(href:String):Nil-instance-method","html_id":"canonical_link(href:String):Nil-instance-method","name":"canonical_link","doc":"Generates a canonical link tag to specify the \"canonical\" or \"preferred\"\nversion of a page.","summary":"<p>Generates a canonical link tag to specify the \"canonical\" or \"preferred\" version of a page.</p>","abstract":false,"args":[{"name":"href","doc":null,"default_value":"","external_name":"href","restriction":"String"}],"args_string":"(href : String) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L47","def":{"name":"canonical_link","args":[{"name":"href","doc":null,"default_value":"","external_name":"href","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"empty_tag(\"link\", href: href, rel: \"canonical\")"}},{"id":"css_link(href,**options):Nil-instance-method","html_id":"css_link(href,**options):Nil-instance-method","name":"css_link","doc":"Generates a link tag for a stylesheet at the path *href*.\n\nAdditional tag attributes can be passed in keyword arguments via *options*.","summary":"<p>Generates a link tag for a stylesheet at the path <em>href</em>.</p>","abstract":false,"args":[{"name":"href","doc":null,"default_value":"","external_name":"href","restriction":""}],"args_string":"(href, **options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L10","def":{"name":"css_link","args":[{"name":"href","doc":null,"default_value":"","external_name":"href","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"options = {href: href, rel: \"stylesheet\", media: \"screen\"}.merge(options)\nempty_tag(\"link\", **options)\n"}},{"id":"html_doctype:Nil-instance-method","html_id":"html_doctype:Nil-instance-method","name":"html_doctype","doc":"Generates an HTML5 doctype tag.","summary":"<p>Generates an HTML5 doctype tag.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L3","def":{"name":"html_doctype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"view << \"<!DOCTYPE html>\""}},{"id":"js_link(src,**options):Nil-instance-method","html_id":"js_link(src,**options):Nil-instance-method","name":"js_link","doc":"Generates a script tag for a file at path *src*.\n\nAdditional tag attributes can be passed in as keyword arguments via\n*options*.","summary":"<p>Generates a script tag for a file at path <em>src</em>.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"args_string":"(src, **options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L19","def":{"name":"js_link","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"options = {src: src}.merge(options)\ntag(\"script\", **options)\n"}},{"id":"nbsp(how_many:Int32=1):Nil-instance-method","html_id":"nbsp(how_many:Int32=1):Nil-instance-method","name":"nbsp","doc":"Generates an escaped HTML `&nbsp;` entity for the number of times specified\nby `how_many`. By default it generates 1 non-breaking space character.\n\n```\nlink \"Home\", to: Home::Index\nspan do\n  nbsp\n  text \"|\"\n  nbsp\nend\nlink \"About\", to: About::Index\n```\nWould generate `<a href=\"/\">Home</a><span>&nbsp;|&nbsp;</span><a href=\"/about\">About</a>`","summary":"<p>Generates an escaped HTML <code>&nbsp;</code> entity for the number of times specified by <code>how_many</code>.</p>","abstract":false,"args":[{"name":"how_many","doc":null,"default_value":"1","external_name":"how_many","restriction":"Int32"}],"args_string":"(how_many : Int32 = <span class=\"n\">1</span>) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L80","def":{"name":"nbsp","args":[{"name":"how_many","doc":null,"default_value":"1","external_name":"how_many","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"how_many.times do\n  raw(\"&nbsp;\")\nend\nview\n"}},{"id":"raw(string:String):Nil-instance-method","html_id":"raw(string:String):Nil-instance-method","name":"raw","doc":"Adds *string* directly to the rendered HTML with no escaping.\n\nFor example,\n```\nraw \"<hopefully-something-safe>\" # Renders \"<hopefully-something-safe>\"\n```\n\nFor custom elements, it's recommended to use the `tag` method.\n\nNOTE: Should **never** be used to render unescaped user-generated data, as\nthis can leave one vulnerable to [cross-site scripting\nattacks](https://en.wikipedia.org/wiki/Cross-site_scripting).","summary":"<p>Adds <em>string</em> directly to the rendered HTML with no escaping.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L63","def":{"name":"raw","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"view << string"}},{"id":"responsive_meta_tag(**options):Nil-instance-method","html_id":"responsive_meta_tag(**options):Nil-instance-method","name":"responsive_meta_tag","doc":"Generates a meta tag telling browsers to render the page as wide as the\ndevice screen/window and at an initial scale of 1.\n\nOptional keyword arguments can be used to override these defaults, as well\nas specify additional properties. Please refer to [MDN's documentation on\nthe viewport meta tag](https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag)\nfor usage details.","summary":"<p>Generates a meta tag telling browsers to render the page as wide as the device screen/window and at an initial scale of 1.</p>","abstract":false,"args":[],"args_string":"(**options) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L40","def":{"name":"responsive_meta_tag","args":[],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"options = {width: \"device-width\", initial_scale: \"1\"}.merge(options)\nmeta(name: \"viewport\", content: build_viewport_properties(options))\n"}},{"id":"utf8_charset:Nil-instance-method","html_id":"utf8_charset:Nil-instance-method","name":"utf8_charset","doc":"Generates a meta tag to specify the character encoding as UTF-8.\n\nIt is highly encouraged to specify the character encoding as early in a\npage's `<head>` as possible as some browsers only look at the first 1024\nbytes to determine the encoding.","summary":"<p>Generates a meta tag to specify the character encoding as UTF-8.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/specialty_tags.cr#L29","def":{"name":"utf8_charset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"meta(charset: \"utf-8\")"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/TextHelpers","path":"Motion/HTML/TextHelpers.html","kind":"module","full_name":"Motion::HTML::TextHelpers","name":"TextHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/page_helpers/text_helpers.cr","line_number":2,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L2"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":"These helper methods will return a `String`.","summary":"<p>These helper methods will return a <code>String</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"current_cycle(name:String=&quot;default&quot;)-instance-method","html_id":"current_cycle(name:String=&quot;default&quot;)-instance-method","name":"current_cycle","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":"String"}],"args_string":"(name : String = <span class=\"s\">&quot;default&quot;</span>)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L174","def":{"name":"current_cycle","args":[{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cycle = get_cycle(name)\nif cycle\n  cycle.current_value\nend\n"}},{"id":"cycle(values:Array,name=&quot;default&quot;):String-instance-method","html_id":"cycle(values:Array,name=&quot;default&quot;):String-instance-method","name":"cycle","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array"},{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":""}],"args_string":"(values : Array, name = <span class=\"s\">&quot;default&quot;</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L160","def":{"name":"cycle","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array"},{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"values = normalize_values(values)\ncycle = get_cycle(name)\nif cycle && (cycle.values == values)\nelse\n  cycle = set_cycle(name, Cycle.new(values))\nend\ncycle.to_s\n"}},{"id":"cycle(*values,name:String=&quot;default&quot;):String-instance-method","html_id":"cycle(*values,name:String=&quot;default&quot;):String-instance-method","name":"cycle","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""},{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":"String"}],"args_string":"(*values, name : String = <span class=\"s\">&quot;default&quot;</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L169","def":{"name":"cycle","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""},{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"values = normalize_values(values)\ncycle(values, name: name)\n"}},{"id":"excerpt(text:String,phrase:Regex|String,separator:String=&quot;&quot;,radius:Int32=100,omission:String=&quot;...&quot;):String-instance-method","html_id":"excerpt(text:String,phrase:Regex|String,separator:String=&quot;&quot;,radius:Int32=100,omission:String=&quot;...&quot;):String-instance-method","name":"excerpt","doc":"Grab a window of longer string\n\nYou'll need to specify a `phrase` to center on, either a Regex or a String.\n\nOptionally:\n* A `radius` (default: `100`) which controls how many units out from the\n`phrase` on either side the excerpt will be.\n* A `separator` (default `\"\"`) which controls what the `radius` will count.\nThe unit by default is any character, which means the default is 100\ncharacter from the `phrase` in either direction. For example, an excerpt of # 10 words would use a `radius` of 10 and a `separator` of `\" \"`.\n* An `omission` string (default: `\"...\"`), which prepends and appends to\nthe excerpt.\n\n```crystal\nlyrics = \"We represent the Lolly pop Guild, The Lolly pop Guild\"\nexcerpt(text, phrase: \"Guild\", radius: 10)\n```\noutputs:\n```html\n...Lolly pop Guild, The Loll...\n```","summary":"<p>Grab a window of longer string</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":"Regex | String"},{"name":"separator","doc":null,"default_value":"\"\"","external_name":"separator","restriction":"String"},{"name":"radius","doc":null,"default_value":"100","external_name":"radius","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"}],"args_string":"(text : String, phrase : Regex | String, separator : String = <span class=\"s\">&quot;&quot;</span>, radius : Int32 = <span class=\"n\">100</span>, omission : String = <span class=\"s\">&quot;...&quot;</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L54","def":{"name":"excerpt","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":"Regex | String"},{"name":"separator","doc":null,"default_value":"\"\"","external_name":"separator","restriction":"String"},{"name":"radius","doc":null,"default_value":"100","external_name":"radius","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if text.nil? || text.to_s.blank?\n  return \"\"\nend\ncase phrase\nwhen Regex\n  regex = phrase\nelse\n  regex = /#{Regex.escape(phrase.to_s)}/i\nend\nif matches = text.match(regex)\nelse\n  return \"\"\nend\nphrase = matches[0]\nif separator.empty?\nelse\n  (text.split(separator)).each do |value|\n    if value.match(regex)\n      phrase = value\n      break\n    end\n  end\nend\nfirst_part, second_part = text.split(phrase, 2)\nprefix, first_part = cut_excerpt_part(:first, first_part, separator, radius, omission)\npostfix, second_part = cut_excerpt_part(:second, second_part, separator, radius, omission)\naffix = [first_part, separator, phrase, separator, second_part].join.strip\n[prefix, affix, postfix].join\n"}},{"id":"pluralize(count:Int|String|Nil,singular:String,plural=nil):String-instance-method","html_id":"pluralize(count:Int|String|Nil,singular:String,plural=nil):String-instance-method","name":"pluralize","doc":"It pluralizes `singular` unless `count` is 1. You can specify the `plural` option\nto override the chosen plural word.","summary":"<p>It pluralizes <code>singular</code> unless <code>count</code> is 1.</p>","abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int | String | Nil"},{"name":"singular","doc":null,"default_value":"","external_name":"singular","restriction":"String"},{"name":"plural","doc":null,"default_value":"nil","external_name":"plural","restriction":""}],"args_string":"(count : Int | String | Nil, singular : String, plural = <span class=\"n\">nil</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L89","def":{"name":"pluralize","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int | String | Nil"},{"name":"singular","doc":null,"default_value":"","external_name":"singular","restriction":"String"},{"name":"plural","doc":null,"default_value":"nil","external_name":"plural","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"word = if ((count == 1) || (count =~ (/^1(\\.0+)?$/)))\n  singular\nelse\n  plural || (Wordsmith::Inflector.pluralize(singular))\nend\n\"#{count || 0} #{word}\"\n"}},{"id":"reset_cycle(name:String=&quot;default&quot;)-instance-method","html_id":"reset_cycle(name:String=&quot;default&quot;)-instance-method","name":"reset_cycle","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":"String"}],"args_string":"(name : String = <span class=\"s\">&quot;default&quot;</span>)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L179","def":{"name":"reset_cycle","args":[{"name":"name","doc":null,"default_value":"\"default\"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cycle = get_cycle(name)\nif cycle\n  cycle.reset\nend\n"}},{"id":"reset_cycles-instance-method","html_id":"reset_cycles-instance-method","name":"reset_cycles","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L229","def":{"name":"reset_cycles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@_cycles = Hash(String, Cycle).new"}},{"id":"to_sentence(list:Enumerable,word_connector:String=&quot;,&quot;,two_word_connector:String=&quot;and&quot;,last_word_connector:String=&quot;,and&quot;):String-instance-method","html_id":"to_sentence(list:Enumerable,word_connector:String=&quot;,&quot;,two_word_connector:String=&quot;and&quot;,last_word_connector:String=&quot;,and&quot;):String-instance-method","name":"to_sentence","doc":"Creates a comma-separated sentence from the provided `Enumerable` *list*\nand appends it to the view.\n\n#### Options:\n\nThe following options allow you to specify how the sentence is constructed:\n  - *word_connector* - A string used to join the elements in *list*s\ncontaining three or more elements (Default is \", \")\n  - *two_word_connector* - A string used to join the elements in *list*s\ncontaining exactly two elements (Default is \" and \")\n  - *last_word_connector* - A string used to join the last element in\n*list*s containing three or more elements (Default is \", and \")\n\n#### Examples:\n\n    to_sentence([] of String)            # => \"\"\n    to_sentence([1])                     # => \"1\"\n    to_sentence([\"one\", \"two\"])          # => \"one and two\"\n    to_sentence({\"one\", \"two\", \"three\"}) # => \"one, two, and three\"\n\n    to_sentence([\"one\", \"two\", \"three\"], word_connector: \" + \")\n    # => one + two, and three\n\n    to_sentence(Set{\"a\", \"z\"}, two_word_connector: \" to \")\n    # => a to z\n\n    to_sentence(1..3, last_word_connector: \", or \")\n    # => 1, 2, or 3\n\nNOTE: By default `#to_sentence` will include a\n[serial comma](https://en.wikipedia.org/wiki/Serial_comma). This can be\noverridden like so:\n\n    to_sentence([\"one\", \"two\", \"three\"], last_word_connector: \" and \")\n    # => one, two and three","summary":"<p>Creates a comma-separated sentence from the provided <code>Enumerable</code> <em>list</em> and appends it to the view.</p>","abstract":false,"args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"Enumerable"},{"name":"word_connector","doc":null,"default_value":"\", \"","external_name":"word_connector","restriction":"String"},{"name":"two_word_connector","doc":null,"default_value":"\" and \"","external_name":"two_word_connector","restriction":"String"},{"name":"last_word_connector","doc":null,"default_value":"\", and \"","external_name":"last_word_connector","restriction":"String"}],"args_string":"(list : Enumerable, word_connector : String = <span class=\"s\">&quot;, &quot;</span>, two_word_connector : String = <span class=\"s\">&quot; and &quot;</span>, last_word_connector : String = <span class=\"s\">&quot;, and &quot;</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L141","def":{"name":"to_sentence","args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"Enumerable"},{"name":"word_connector","doc":null,"default_value":"\", \"","external_name":"word_connector","restriction":"String"},{"name":"two_word_connector","doc":null,"default_value":"\" and \"","external_name":"two_word_connector","restriction":"String"},{"name":"last_word_connector","doc":null,"default_value":"\", and \"","external_name":"last_word_connector","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"list = list.to_a\nif list.size < 3\n  return list.join(two_word_connector)\nend\n\"#{list[0..-2].join(word_connector)}#{last_word_connector}#{list.last}\"\n"}},{"id":"truncate_text(text:String,length:Int32=30,omission:String=&quot;...&quot;,separator:String?=nil):String-instance-method","html_id":"truncate_text(text:String,length:Int32=30,omission:String=&quot;...&quot;,separator:String?=nil):String-instance-method","name":"truncate_text","doc":"Shorten text after a length point.\n\nUnlike `truncate`, this method can be used inside of other tags because it\nreturns a String. See `truncate` method for argument documentation.\n\n```crystal\nlink \"#\" do\n  text truncate_text(\"Four score and seven years ago\", length: 27)\nend\n```\noutputs:\n```html\n<a href=\\\"#\\\">Four score and se...</a>\n```","summary":"<p>Shorten text after a length point.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","doc":null,"default_value":"nil","external_name":"separator","restriction":"String | Nil"}],"args_string":"(text : String, length : Int32 = <span class=\"n\">30</span>, omission : String = <span class=\"s\">&quot;...&quot;</span>, separator : String? = <span class=\"n\">nil</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L19","def":{"name":"truncate_text","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"length","doc":null,"default_value":"30","external_name":"length","restriction":"Int32"},{"name":"omission","doc":null,"default_value":"\"...\"","external_name":"omission","restriction":"String"},{"name":"separator","doc":null,"default_value":"nil","external_name":"separator","restriction":"String | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if text.size > length\nelse\n  return text\nend\nlength_with_room_for_omission = length - omission.size\nstop = if separator\n  (text.rindex(separator, length_with_room_for_omission)) || length_with_room_for_omission\nelse\n  length_with_room_for_omission\nend\n\"#{text[0, stop]}#{omission}\"\n"}},{"id":"word_wrap(text:String,line_width:Int32=80,break_sequence:String=&quot;\\n&quot;):String-instance-method","html_id":"word_wrap(text:String,line_width:Int32=80,break_sequence:String=&quot;\\n&quot;):String-instance-method","name":"word_wrap","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"line_width","doc":null,"default_value":"80","external_name":"line_width","restriction":"Int32"},{"name":"break_sequence","doc":null,"default_value":"\"\\n\"","external_name":"break_sequence","restriction":"String"}],"args_string":"(text : String, line_width : Int32 = <span class=\"n\">80</span>, break_sequence : String = <span class=\"s\">&quot;\\n&quot;</span>) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L99","def":{"name":"word_wrap","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"line_width","doc":null,"default_value":"80","external_name":"line_width","restriction":"Int32"},{"name":"break_sequence","doc":null,"default_value":"\"\\n\"","external_name":"break_sequence","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"text = (text.split(\"\\n\")).map do |line|\n  line.size > line_width ? (line.gsub(/(.{1,#{line_width}})(\\s+|$)/, \"\\\\1#{break_sequence}\")).strip : line\nend\ntext.join(break_sequence)\n"}}],"macros":[],"types":[{"html_id":"motion/Motion/HTML/TextHelpers/Cycle","path":"Motion/HTML/TextHelpers/Cycle.html","kind":"class","full_name":"Motion::HTML::TextHelpers::Cycle","name":"Cycle","abstract":false,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/html/page_helpers/text_helpers.cr","line_number":184,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L184"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion/HTML/TextHelpers","kind":"module","full_name":"Motion::HTML::TextHelpers","name":"TextHelpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(values:Array(String))-class-method","html_id":"new(values:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L196","def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*values)-class-method","html_id":"new(*values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(*values)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L189","def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(*values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"current_value-instance-method","html_id":"current_value-instance-method","name":"current_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L206","def":{"name":"current_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values[previous_index]?.to_s"}},{"id":"reset-instance-method","html_id":"reset-instance-method","name":"reset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L202","def":{"name":"reset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@index = 0"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L210","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = @values[@index]?.to_s\n@index = next_index\nvalue\n"}},{"id":"values:Array(String)-instance-method","html_id":"values:Array(String)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/text_helpers.cr#L186","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values"}}],"macros":[],"types":[]}]},{"html_id":"motion/Motion/HTML/TimeHelpers","path":"Motion/HTML/TimeHelpers.html","kind":"module","full_name":"Motion::HTML::TimeHelpers","name":"TimeHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/page_helpers/time_helpers.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/time_helpers.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"distance_of_time_in_words(from:Time,to:Time):String-instance-method","html_id":"distance_of_time_in_words(from:Time,to:Time):String-instance-method","name":"distance_of_time_in_words","doc":"Returns a `String` with approximate distance in time between `from` and `to`.\n\n```\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10, 0, 0), Time.utc(2019, 8, 14, 10, 0, 5))\n# => \"5 seconds\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10, 0), Time.utc(2019, 8, 14, 10, 25))\n# => \"25 minutes\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14, 10), Time.utc(2019, 8, 14, 11))\n# => \"an hour\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2019, 8, 16))\n# => \"2 days\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2019, 10, 4))\n# => \"about a month\"\ndistance_of_time_in_words(Time.utc(2019, 8, 14), Time.utc(2061, 10, 4))\n# => \"almost 42 years\"\n```","summary":"<p>Returns a <code>String</code> with approximate distance in time between <code>from</code> and <code>to</code>.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Time"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Time"}],"args_string":"(from : Time, to : Time) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/time_helpers.cr#L18","def":{"name":"distance_of_time_in_words","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Time"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"minutes = (to - from).minutes\nseconds = (to - from).seconds\nhours = (to - from).hours\ndays = (to - from).days\nif days != 0\n  return distance_in_days(days)\nend\nif hours != 0\n  return distance_in_hours(hours)\nend\nif minutes != 0\n  return distance_in_minutes(minutes)\nend\ndistance_in_seconds(seconds)\n"}},{"id":"time_ago_in_words(from:Time):String-instance-method","html_id":"time_ago_in_words(from:Time):String-instance-method","name":"time_ago_in_words","doc":"Returns a `String` with approximate distance in time between `from` and current moment.\n\n```\ntime_ago_in_words(Time.utc(2019, 8, 30)) # => \"about a month\"\n# gives the same result as:\ndistance_of_time_in_words(Time.utc(2019, 8, 30), Time.utc) # => \"about a month\"\n```\n\nSee more examples in `#distance_of_time_in_words`.","summary":"<p>Returns a <code>String</code> with approximate distance in time between <code>from</code> and current moment.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Time"}],"args_string":"(from : Time) : String","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/time_helpers.cr#L39","def":{"name":"time_ago_in_words","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"distance_of_time_in_words(from, Time.utc)"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/UrlHelpers","path":"Motion/HTML/UrlHelpers.html","kind":"module","full_name":"Motion::HTML::UrlHelpers","name":"UrlHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/page_helpers/url_helpers.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/url_helpers.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"current_page?(value:String,check_query_params:Bool=false):Bool-instance-method","html_id":"current_page?(value:String,check_query_params:Bool=false):Bool-instance-method","name":"current_page?","doc":"Tests if the given path matches the current request path.\n\n```\n# Let's say we are visiting https://example.com/shop/products?order=desc&page=1\ncurrent_page?(\"/shop/checkout\")\n# => false\ncurrent_page?(\"/shop/products\")\n# => true\ncurrent_page?(\"/shop/products/\")\n# => true\ncurrent_page?(\"/shop/products?order=desc&page=1\")\n# => true\ncurrent_page?(\"/shop/products\", check_query_params: true)\n# => false\ncurrent_page?(\"/shop/products?order=desc&page=1\", check_query_params: true)\n# => true\ncurrent_page?(\"https://example.com/shop/products\")\n# => true\ncurrent_page?(\"https://example.io/shop/products\")\n# => false\ncurrent_page?(\"https://example.com/shop/products\", check_query_params: true)\n# => false\ncurrent_page?(\"https://example.com/shop/products?order=desc&page=1\")\n# => true\n```","summary":"<p>Tests if the given path matches the current request path.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"check_query_params","doc":null,"default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"args_string":"(value : String, check_query_params : Bool = <span class=\"n\">false</span>) : Bool","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/url_helpers.cr#L27","def":{"name":"current_page?","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"check_query_params","doc":null,"default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"request = @context.request\nif {\"GET\", \"HEAD\"}.includes?(request.method)\nelse\n  return false\nend\nuri = URI.parse(value)\nrequest_uri = URI.parse(request.resource)\npath = uri.path\nresource = request_uri.path\nif path == \"/\"\nelse\n  path = path.chomp(\"/\")\n  resource = resource.chomp(\"/\")\nend\nif check_query_params\n  path = path + (comparable_query_params(uri.query_params))\n  resource = resource + (comparable_query_params(request_uri.query_params))\nend\nif value.match(/^\\w+:\\/\\//)\n  host_with_port = uri.port ? \"#{uri.host}:#{uri.port}\" : uri.host\n  \"#{host_with_port}#{path}\" == \"#{request.host_with_port}#{resource}\"\nelse\n  path == resource\nend\n"}},{"id":"current_page?(action:Motion::Action.class|Motion::RouteHelper,check_query_params:Bool=false):Bool-instance-method","html_id":"current_page?(action:Motion::Action.class|Motion::RouteHelper,check_query_params:Bool=false):Bool-instance-method","name":"current_page?","doc":"Tests if the given path matches the current request path.\n\n```\n# Visiting https://example.com/pages/123\ncurrent_page?(Pages::Show.with(123))\n# => true\ncurrent_page?(Posts::Show.with(123))\n# => false\n# Visiting https://example.com/pages\ncurrent_page?(Pages::Index)\n# => true\ncurrent_page?(Blog::Index)\n# => false\n# Visiting https://example.com/pages?page=2\ncurrent_page?(Pages::Index.with)\n# => true\ncurrent_page?(Pages::Index.with(page: 2))\n# => true\ncurrent_page?(Pages::Index.with, check_query_params: true)\n# => false\ncurrent_page?(Pages::Index.with(page: 2), check_query_params: true)\n# => true\n```","summary":"<p>Tests if the given path matches the current request path.</p>","abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"Motion::Action.class | Motion::RouteHelper"},{"name":"check_query_params","doc":null,"default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"args_string":"(action : <span class=\"t\">Motion</span><span class=\"t\">::</span><span class=\"t\">Action</span>.<span class=\"k\">class</span> | Motion::RouteHelper, check_query_params : Bool = <span class=\"n\">false</span>) : Bool","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/page_helpers/url_helpers.cr#L81","def":{"name":"current_page?","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"Motion::Action.class | Motion::RouteHelper"},{"name":"check_query_params","doc":null,"default_value":"false","external_name":"check_query_params","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"current_page?(action.path, check_query_params)"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/HTML/WithDefaults","path":"Motion/HTML/WithDefaults.html","kind":"module","full_name":"Motion::HTML::WithDefaults","name":"WithDefaults","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/html/tags/with_defaults.cr","line_number":4,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/with_defaults.cr#L4"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion/HTML","kind":"module","full_name":"Motion::HTML","name":"HTML"},"doc":"Set up defaults arguments for HTML tags.\n\nThis is automatically included in Pages and Components.","summary":"<p>Set up defaults arguments for HTML tags.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"with_defaults(**named_args,&)-instance-method","html_id":"with_defaults(**named_args,&)-instance-method","name":"with_defaults","doc":"This is typically used in components and helper methods to set up defaults for\nreusable components.\n\nExample in a page or component:\n\n   with_defaults field: form.email, class: \"input\" do |html|\n     html.email_input placeholder: \"Email\"\n   end\n\nIs the same as:\n\n    email_input field: form.email, class: \"input\", placeholder: \"Email\"","summary":"<p>This is typically used in components and helper methods to set up defaults for reusable components.</p>","abstract":false,"args":[],"args_string":"(**named_args, &)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/with_defaults.cr#L17","def":{"name":"with_defaults","args":[],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"OptionMerger.new(page_context: self, named_args: named_args).run do |html|\n  yield html\nend"}}],"macros":[],"types":[{"html_id":"motion/Motion/HTML/WithDefaults/OptionMerger","path":"Motion/HTML/WithDefaults/OptionMerger.html","kind":"class","full_name":"Motion::HTML::WithDefaults::OptionMerger(T, V)","name":"OptionMerger","abstract":false,"superclass":{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"motion/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"motion/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/motion/html/tags/with_defaults.cr","line_number":23,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/with_defaults.cr#L23"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion/HTML/WithDefaults","kind":"module","full_name":"Motion::HTML::WithDefaults","name":"WithDefaults"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(page_context:T,named_args:V)-class-method","html_id":"new(page_context:T,named_args:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"page_context","doc":null,"default_value":"","external_name":"page_context","restriction":"T"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"V"}],"args_string":"(page_context : T, named_args : V)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/with_defaults.cr#L24","def":{"name":"new","args":[{"name":"page_context","doc":null,"default_value":"","external_name":"page_context","restriction":"T"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = OptionMerger(T, V).allocate\n_.initialize(page_context, named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"run(&)-instance-method","html_id":"run(&)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/with_defaults.cr#L27","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield self"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/html/tags/with_defaults.cr#L31","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      overridden_html_class = nil\n\n      \n{% named_args = call.named_args %}\n\n      \n{% if named_args %}\n        {% if call.named_args.any? do |arg|\n  arg.name == (:class)\nend %}\n          {% raise(\"\\n\\nUse 'replace_class' or 'append_class' instead of 'class'.\\n\\nCorrect example:\\n\\n    with_defaults class: \\\"default\\\" do |html|\\n      # Use 'replace_class' or 'append_class' here\\n      html.div replace_class: \\\"replaced\\\"\\n    end\\n\\nIncorrect example:\\n\\n    with_defaults class: \\\"default\\\" do |html|\\n      # Won't work with 'class'\\n      html.div class: \\\"replaced\\\"\\n    end\\n\\n-----------------\\n\") %}\n        {% end %}\n\n        {% appended_class_arg = call.named_args.find do |arg|\n  arg.name == (:append_class)\nend %}\n        {% if appended_class_arg %}\n          original_class = if klass = @named_args[:class]?\n            # Append an empty space if there is a default class that\n            # we are appending to\n            \"#{klass} \"\n          else\n            # Otherwise leave it empty\n            \"\"\n          end\n\n          overridden_html_class = \"#{original_class}#{{{ appended_class_arg.value }}}\"\n        {% end %}\n        {% named_args = named_args.reject do |arg|\n  arg.name == (:append_class)\nend %}\n\n        {% replace_class_arg = call.named_args.find do |arg|\n  arg.name == (:replace_class)\nend %}\n        {% if replace_class_arg %}\n          overridden_html_class = \"#{{{ replace_class_arg.value }}}\"\n        {% end %}\n        {% named_args = named_args.reject do |arg|\n  arg.name == (:replace_class)\nend %}\n      {% end %}\n\n\n      nargs = @named_args\n{% if named_args %}.merge(\n        {% for arg in named_args %}\n          {{ arg.name }}: {{ arg.value }},\n        {% end %}\n      )\n\n      # If there is no default class and we want to append/replace one, then\n      # the compiler blows up because the @named_args type is a Union. Where\n      # one type has the 'class' key and the other doesn't.\n      #\n      # We fix that by making sure there is always a class key if we try to\n      # append/replace a class.\n      {% if appended_class_arg || replace_class_arg %}\n        nargs = nargs.merge(class: \"\")\n      {% end %}\n\n      if overridden_html_class\n        nargs = nargs.merge(class: overridden_html_class)\n      end\n      {% end %}\n\n\n      args = Tuple.new(\n{% if call.args %}\n        {% for arg in call.args %}\n          {{ arg }},\n        {% end %}\n      {% end %}\n)\n\n      @page_context.\n{{ call.name }}\n *args, **nargs  \n{{ call.block }}\n\n    \n"}}],"types":[]}]}]},{"html_id":"motion/Motion/MapMethod","path":"Motion/MapMethod.html","kind":"annotation","full_name":"Motion::MapMethod","name":"MapMethod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/annotations.cr","line_number":36,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/annotations.cr#L36"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":"Set this annotation on any methods that can be invoked from the frontend.\n\nHere is a small example setting `MyComponent#add` as a motion:\n```crystal\nclass MyComponent < Motion::Base\n  props count : Int32 = 0\n\n  @[Motion::MapMethod]\n  def add\n    count += 1\n  end\n\n  def render\n    div do\n      span class: \"count\" do\n        text @count.to_s\n      end\n      button data_motion: \"add\" do\n        text \"Add\"\n      end\n    end\n  end\nend\n```\n\n`MyComponent#render` would return:\n\n```html\n<div>\n  <span class=\"count\">0</span>\n  <button data-motion=\"add\">Add</button>\n</div>\n```\n\nWhen the user hits the button that `data-motion` is assigned to, a request will be sent off. The server will invoke the method provided and rerender the component. In this case, `add` will be invoked, count will increment by `1` & the html after rerendering will reflect that.","summary":"<p>Set this annotation on any methods that can be invoked from the frontend.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"motion/Motion/Motions","path":"Motion/Motions.html","kind":"module","full_name":"Motion::Motions","name":"Motions","abstract":false,"superclass":null,"ancestors":[{"html_id":"motion/Motion/Motions/Broadcasts","kind":"module","full_name":"Motion::Motions::Broadcasts","name":"Broadcasts"},{"html_id":"motion/Motion/Motions/Rendering","kind":"module","full_name":"Motion::Motions::Rendering","name":"Rendering"}],"locations":[{"filename":"src/motion/motions.cr","line_number":10,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions.cr#L10"},{"filename":"src/motion/motions/broadcasts.cr","line_number":2,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions/broadcasts.cr#L2"},{"filename":"src/motion/motions/rendering.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions/rendering.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"motion/Motion/Motions/Broadcasts","kind":"module","full_name":"Motion::Motions::Broadcasts","name":"Broadcasts"},{"html_id":"motion/Motion/Motions/Rendering","kind":"module","full_name":"Motion::Motions::Rendering","name":"Rendering"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/Base","kind":"class","full_name":"Motion::Base","name":"Base"}],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"setup_json_hook-macro","html_id":"setup_json_hook-macro","name":"setup_json_hook","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions.cr#L20","def":{"name":"setup_json_hook","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      macro finished\n        setup_json_serializer\n      \nend\n\n      macro included\n        setup_json_hook\n      \nend\n\n      macro inherited\n        setup_json_hook\n      \nend\n    \n"}},{"id":"setup_json_serializer-macro","html_id":"setup_json_serializer-macro","name":"setup_json_serializer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions.cr#L38","def":{"name":"setup_json_serializer","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !@type.abstract? %}\n        include JSON::Serializable\n      {% end %}\n\n    \n"}}],"types":[{"html_id":"motion/Motion/Motions/Broadcasts","path":"Motion/Motions/Broadcasts.html","kind":"module","full_name":"Motion::Motions::Broadcasts","name":"Broadcasts","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/motions/broadcasts.cr","line_number":3,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions/broadcasts.cr#L3"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/Motions","kind":"module","full_name":"Motion::Motions","name":"Motions"}],"namespace":{"html_id":"motion/Motion/Motions","kind":"module","full_name":"Motion::Motions","name":"Motions"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"stream_from(channel,method)-macro","html_id":"stream_from(channel,method)-macro","name":"stream_from","doc":null,"summary":null,"abstract":false,"args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":""},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""}],"args_string":"(channel, method)","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/motions/broadcasts.cr#L4","def":{"name":"stream_from","args":[{"name":"channel","doc":null,"default_value":"","external_name":"channel","restriction":""},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        getter broadcast_channel : String = \n{{ channel.id.stringify }}\n\n\n        def _process_model_stream\n          \n{{ method.id }}\n\n        \nend\n      \n"}}],"types":[]}]},{"html_id":"motion/Motion/MountComponent","path":"Motion/MountComponent.html","kind":"module","full_name":"Motion::MountComponent","name":"MountComponent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/mount_component.cr","line_number":1,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/mount_component.cr#L1"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"motion/Motion/HTML/Engine","kind":"module","full_name":"Motion::HTML::Engine","name":"Engine"}],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"m(component_class:Motion::Base.class,*args,**named_args):Nil-instance-method","html_id":"m(component_class:Motion::Base.class,*args,**named_args):Nil-instance-method","name":"m","doc":"Appends the `component` to the view.\n\nWhen `Motion::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\nm(MyComponent)\nm(MyComponent, with_args: 123)\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(component_class : <span class=\"t\">Motion</span><span class=\"t\">::</span><span class=\"t\">Base</span>.<span class=\"k\">class</span>, *args, **named_args) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/mount_component.cr#L2","def":{"name":"m","args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component_class) do\n  component = component_class.new(*args, **named_args)\n  render_and_transform(component)\nend"}},{"id":"m(component_class:Motion::Base.class,*args,**named_args,&):Nil-instance-method","html_id":"m(component_class:Motion::Base.class,*args,**named_args,&):Nil-instance-method","name":"m","doc":"Appends the `component` to the view. Takes a block, and yields the\nargs passed to the component.\n\nWhen `Motion::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\nm(MyComponent, name: \"Jane\") do |name|\n  text name.upcase\nend\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(component_class : <span class=\"t\">Motion</span><span class=\"t\">::</span><span class=\"t\">Base</span>.<span class=\"k\">class</span>, *args, **named_args, &) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/mount_component.cr#L2","def":{"name":"m","args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component_class) do\n  component = (component_class.new(*args, **named_args)).render do |*yield_args|\n    yield *yield_args\n  end\n  render_and_transform(component)\nend"}},{"id":"mount(component_class:Motion::Base.class,*args,**named_args):Nil-instance-method","html_id":"mount(component_class:Motion::Base.class,*args,**named_args):Nil-instance-method","name":"mount","doc":"Appends the `component` to the view.\n\nWhen `Motion::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\nmount(MyComponent)\nmount(MyComponent, with_args: 123)\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(component_class : <span class=\"t\">Motion</span><span class=\"t\">::</span><span class=\"t\">Base</span>.<span class=\"k\">class</span>, *args, **named_args) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/mount_component.cr#L2","def":{"name":"mount","args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component_class) do\n  component = component_class.new(*args, **named_args)\n  render_and_transform(component)\nend"}},{"id":"mount(component_class:Motion::Base.class,*args,**named_args,&):Nil-instance-method","html_id":"mount(component_class:Motion::Base.class,*args,**named_args,&):Nil-instance-method","name":"mount","doc":"Appends the `component` to the view. Takes a block, and yields the\nargs passed to the component.\n\nWhen `Motion::HTMLPage.settings.render_component_comments` is\nset to `true`, it will render HTML comments showing where the component\nstarts and ends.\n\n```\nmount(MyComponent, name: \"Jane\") do |name|\n  text name.upcase\nend\n```","summary":"<p>Appends the <code>component</code> to the view.</p>","abstract":false,"args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(component_class : <span class=\"t\">Motion</span><span class=\"t\">::</span><span class=\"t\">Base</span>.<span class=\"k\">class</span>, *args, **named_args, &) : Nil","source_link":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/mount_component.cr#L2","def":{"name":"mount","args":[{"name":"component_class","doc":null,"default_value":"","external_name":"component_class","restriction":"Motion::Base.class"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"print_component_comment(component_class) do\n  component = (component_class.new(*args, **named_args)).render do |*yield_args|\n    yield *yield_args\n  end\n  render_and_transform(component)\nend"}}],"macros":[],"types":[]},{"html_id":"motion/Motion/PeriodicTimer","path":"Motion/PeriodicTimer.html","kind":"annotation","full_name":"Motion::PeriodicTimer","name":"PeriodicTimer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/motion/annotations.cr","line_number":64,"url":"https://github.com/andrewc910/motion.cr/blob/fe91956191a0f819dd320205524143530701f026/src/motion/annotations.cr#L64"}],"repository_name":"motion","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"motion/Motion","kind":"module","full_name":"Motion","name":"Motion"},"doc":"Set this annotation on any methods that require invocation every `x` interval.\nThis annotation accepts 1 argument which is named `interval` and expects\nthe type to be `Time::Span`\n\nHere is a small example setting `MyComponent#tick` as a periodic timer:\n```crystal\nclass TickerComponent < Motion::Base\n  props ticker : Int32 = 0\n  props motion_component : Bool = true\n\n  @[Motion::PeriodicTimer(interval: 1.second)]\n  def tick\n    @ticker += 1\n  end\n\n  def render\n    div do\n      span @ticker.to_s\n    end\n  end\nend\n```\n\nWhen the user hits the page containing this component, Motion will\ninvoke the method assigned to `@[Motion::PeriodicTimer]` based on the\n`Time::Span` provided.","summary":"<p>Set this annotation on any methods that require invocation every <code>x</code> interval.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}